// This Arduino code was automatically generated by Aixt Project
//     https://github.com/fermarsan/aixt
// Device = T-WATCH-2020
// Board = ESP32-WROOM-32
// Backend = arduino

typedef int8_t i8;
typedef int16_t i16;
typedef int32_t i32;
typedef int64_t i64;
typedef int32_t isize;
typedef int32_t int_literal;
typedef uint8_t u8;
typedef uint16_t u16;
typedef uint32_t u32;
typedef uint64_t u64;
typedef uint32_t usize;
typedef float f32;
typedef double f64;
typedef double float_literal;
typedef char rune;

#define _const_main__cpu_freq_mhz	_const_main__cpu_freq/1000000
#define _const_main__cpu_freq  240000000

#define LILYGO_WATCH_2020_V1    //To use T-Watch2020, please uncomment this line
#define LILYGO_WATCH_LVGL       //To use LVGL, you need to enable the macro LVGL

#include <LilyGoWatch.h>

TTGOClass *watch;

#define WATCH_GET_WATCH()    watch = TTGOClass::getWatch()
#define WATCH_BEGIN()        watch->begin()
#define WATCH_OPEN_BL()      watch->openBL()
#define WATCH_LVGL_BEGIN()   watch->lvgl_begin()

void  watch__start();
void  time__sleep(i32 ts);
void  time__sleep_ms(i32 tms);
void  time__sleep_us(i32 tus);

// #define lv__align_center    LV_ALIGN_CENTER

void  watch__start() {
	WATCH_GET_WATCH(); 
	WATCH_BEGIN(); 
	WATCH_OPEN_BL(); 
	WATCH_LVGL_BEGIN(); 
}

inline void  time__sleep(i32 ts) {
	delay(ts * 1000); 
}

inline void  time__sleep_ms(i32 tms) {
	delay(tms); 
}

inline void  time__sleep_us(i32 tus) {
	delayMicroseconds(tus); 
}

const i32 _const_lv__align_center = (i32)(LV_ALIGN_CENTER);

#define lv__scr_act()  lv_scr_act()

#define lv__label_create(active_scr)  lv_label_create(active_scr, NULL)

#define lv__label_set_text(label, msg) lv_label_set_text(label, msg)

#define lv__obj_align(obj, align, x, y) lv_obj_align(obj, NULL, align, x, y)

#define lv__task_handler() lv_task_handler()

void setup() {
	watch__start(); 
	lv_obj_t *text = (lv_obj_t*)(lv__label_create(lv__scr_act())); 
	lv__label_set_text(text, "T-Watch"); 
	lv__obj_align(text, _const_lv__align_center, 0, 0); 
	while( true ) {
		lv__task_handler(); 
		time__sleep(5); 
	} 
}

void loop(){
}
