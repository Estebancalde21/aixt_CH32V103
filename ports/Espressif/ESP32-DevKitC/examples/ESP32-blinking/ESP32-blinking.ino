// This Arduino code was automatically generated by Aixt Project
// Device = ESP32-DevKitC
// Board = ESP32-WROOM-32
// Backend = arduino

typedef int8_t i8;
typedef int16_t i16;
typedef int32_t i32;
typedef int64_t i64;
typedef int32_t isize;
typedef int32_t int_literal;
typedef uint8_t u8;
typedef uint16_t u16;
typedef uint32_t u32;
typedef uint64_t u64;
typedef uint32_t usize;
typedef float f32;
typedef double f64;
typedef double float_literal;

void  time__sleep(i32 ts);
void  time__sleep_ms(i32 tms);
void  time__sleep_us(i32 tus);
u8  pin__read(u8 name);
void  pin__low(u8 name);
void  pin__write(u8 name, u8 val);
void  pin__setup(u8 name, u8 mode);
void  pin__high(u8 name);

inline void  time__sleep(i32 ts) {
	delay(ts * 1000); 
}

inline void  time__sleep_ms(i32 tms) {
	delay(tms); 
}

inline void  time__sleep_us(i32 tus) {
	delayMicroseconds(tus); 
}

const i32 _const_pin__gpio0 = (i32)(0);
const i32 _const_pin__gpio1 = (i32)(1);
const i32 _const_pin__gpio2 = (i32)(2);
const i32 _const_pin__gpio3 = (i32)(3);
const i32 _const_pin__gpio4 = (i32)(4);
const i32 _const_pin__gpio5 = (i32)(5);
const i32 _const_pin__gpio6 = (i32)(6);
const i32 _const_pin__gpio7 = (i32)(7);
const i32 _const_pin__gpio8 = (i32)(8);
const i32 _const_pin__gpio9 = (i32)(9);
const i32 _const_pin__gpio10 = (i32)(10);
const i32 _const_pin__gpio11 = (i32)(11);
const i32 _const_pin__gpio12 = (i32)(12);
const i32 _const_pin__gpio13 = (i32)(13);
const i32 _const_pin__gpio14 = (i32)(14);
const i32 _const_pin__gpio15 = (i32)(15);
const i32 _const_pin__gpio16 = (i32)(16);
const i32 _const_pin__gpio17 = (i32)(17);
const i32 _const_pin__gpio18 = (i32)(18);
const i32 _const_pin__gpio19 = (i32)(19);
const i32 _const_pin__gpio20 = (i32)(20);
const i32 _const_pin__gpio21 = (i32)(21);
const i32 _const_pin__gpio22 = (i32)(22);
const i32 _const_pin__gpio23 = (i32)(23);
const i32 _const_pin__gpio24 = (i32)(24);
const i32 _const_pin__gpio25 = (i32)(25);
const i32 _const_pin__gpio26 = (i32)(26);
const i32 _const_pin__gpio27 = (i32)(27);
const i32 _const_pin__gpio28 = (i32)(28);
const i32 _const_pin__gpio29 = (i32)(29);
const i32 _const_pin__gpio30 = (i32)(30);
const i32 _const_pin__gpio31 = (i32)(31);
const i32 _const_pin__gpio32 = (i32)(32);
const i32 _const_pin__gpio33 = (i32)(33);
const i32 _const_pin__gpio34 = (i32)(34);
const i32 _const_pin__gpio35 = (i32)(35);
const i32 _const_pin__gpio36 = (i32)(36);
const i32 _const_pin__input = (i32)(0);
const i32 _const_pin__output = (i32)(1);
const i32 _const_pin__in_pullup = (i32)(2);

inline u8  pin__read(u8 name) {
	return digitalRead(name); 
}

inline void  pin__low(u8 name) {
	digitalWrite(name, LOW); 
}

inline void  pin__write(u8 name, u8 val) {
	digitalWrite(name, val); 
}

inline void  pin__setup(u8 name, u8 mode) {
	pinMode(name, mode); 
}

inline void  pin__high(u8 name) {
	digitalWrite(name, HIGH); 
}

void setup() {
	pin__setup(_const_pin__gpio2, _const_pin__output); 
	while( true ) {
		pin__high(_const_pin__gpio2); 
		time__sleep_ms(500); 
		pin__low(_const_pin__gpio2); 
		time__sleep_ms(500); 
	} 
}

void loop(){
}
