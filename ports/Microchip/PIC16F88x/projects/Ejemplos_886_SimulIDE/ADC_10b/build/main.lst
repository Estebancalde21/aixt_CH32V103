

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Jun  6 15:12:27 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
     9                           	dabs	1,0x7E,2
    10     0000                     
    11                           ; Generated 05/01/2024 GMT
    12                           ; 
    13                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    14                           ; All rights reserved.
    15                           ; 
    16                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    17                           ; 
    18                           ; Redistribution and use in source and binary forms, with or without modification, are
    19                           ; permitted provided that the following conditions are met:
    20                           ; 
    21                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    22                           ;        conditions and the following disclaimer.
    23                           ; 
    24                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    25                           ;        of conditions and the following disclaimer in the documentation and/or other
    26                           ;        materials provided with the distribution. Publication is not required when
    27                           ;        this file is used in an embedded application.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC16F886 Definitions
    43                           ; 
    44                           ; SFR Addresses
    45     0000                     	;# 
    46     0001                     	;# 
    47     0002                     	;# 
    48     0003                     	;# 
    49     0004                     	;# 
    50     0005                     	;# 
    51     0006                     	;# 
    52     0007                     	;# 
    53     0009                     	;# 
    54     000A                     	;# 
    55     000B                     	;# 
    56     000C                     	;# 
    57     000D                     	;# 
    58     000E                     	;# 
    59     000E                     	;# 
    60     000F                     	;# 
    61     0010                     	;# 
    62     0011                     	;# 
    63     0012                     	;# 
    64     0013                     	;# 
    65     0014                     	;# 
    66     0015                     	;# 
    67     0015                     	;# 
    68     0016                     	;# 
    69     0017                     	;# 
    70     0018                     	;# 
    71     0019                     	;# 
    72     001A                     	;# 
    73     001B                     	;# 
    74     001B                     	;# 
    75     001C                     	;# 
    76     001D                     	;# 
    77     001E                     	;# 
    78     001F                     	;# 
    79     0081                     	;# 
    80     0085                     	;# 
    81     0086                     	;# 
    82     0087                     	;# 
    83     0089                     	;# 
    84     008C                     	;# 
    85     008D                     	;# 
    86     008E                     	;# 
    87     008F                     	;# 
    88     0090                     	;# 
    89     0091                     	;# 
    90     0092                     	;# 
    91     0093                     	;# 
    92     0093                     	;# 
    93     0093                     	;# 
    94     0094                     	;# 
    95     0095                     	;# 
    96     0096                     	;# 
    97     0097                     	;# 
    98     0098                     	;# 
    99     0099                     	;# 
   100     009A                     	;# 
   101     009B                     	;# 
   102     009C                     	;# 
   103     009D                     	;# 
   104     009E                     	;# 
   105     009F                     	;# 
   106     0105                     	;# 
   107     0107                     	;# 
   108     0108                     	;# 
   109     0109                     	;# 
   110     010C                     	;# 
   111     010C                     	;# 
   112     010D                     	;# 
   113     010E                     	;# 
   114     010F                     	;# 
   115     0185                     	;# 
   116     0187                     	;# 
   117     0188                     	;# 
   118     0189                     	;# 
   119     018C                     	;# 
   120     018D                     	;# 
   121     0000                     	;# 
   122     0001                     	;# 
   123     0002                     	;# 
   124     0003                     	;# 
   125     0004                     	;# 
   126     0005                     	;# 
   127     0006                     	;# 
   128     0007                     	;# 
   129     0009                     	;# 
   130     000A                     	;# 
   131     000B                     	;# 
   132     000C                     	;# 
   133     000D                     	;# 
   134     000E                     	;# 
   135     000E                     	;# 
   136     000F                     	;# 
   137     0010                     	;# 
   138     0011                     	;# 
   139     0012                     	;# 
   140     0013                     	;# 
   141     0014                     	;# 
   142     0015                     	;# 
   143     0015                     	;# 
   144     0016                     	;# 
   145     0017                     	;# 
   146     0018                     	;# 
   147     0019                     	;# 
   148     001A                     	;# 
   149     001B                     	;# 
   150     001B                     	;# 
   151     001C                     	;# 
   152     001D                     	;# 
   153     001E                     	;# 
   154     001F                     	;# 
   155     0081                     	;# 
   156     0085                     	;# 
   157     0086                     	;# 
   158     0087                     	;# 
   159     0089                     	;# 
   160     008C                     	;# 
   161     008D                     	;# 
   162     008E                     	;# 
   163     008F                     	;# 
   164     0090                     	;# 
   165     0091                     	;# 
   166     0092                     	;# 
   167     0093                     	;# 
   168     0093                     	;# 
   169     0093                     	;# 
   170     0094                     	;# 
   171     0095                     	;# 
   172     0096                     	;# 
   173     0097                     	;# 
   174     0098                     	;# 
   175     0099                     	;# 
   176     009A                     	;# 
   177     009B                     	;# 
   178     009C                     	;# 
   179     009D                     	;# 
   180     009E                     	;# 
   181     009F                     	;# 
   182     0105                     	;# 
   183     0107                     	;# 
   184     0108                     	;# 
   185     0109                     	;# 
   186     010C                     	;# 
   187     010C                     	;# 
   188     010D                     	;# 
   189     010E                     	;# 
   190     010F                     	;# 
   191     0185                     	;# 
   192     0187                     	;# 
   193     0188                     	;# 
   194     0189                     	;# 
   195     018C                     	;# 
   196     018D                     	;# 
   197     0007                     _PORTC	set	7
   198     0006                     _PORTB	set	6
   199     001E                     _ADRESH	set	30
   200     001F                     _ADCON0bits	set	31
   201     0087                     _TRISC	set	135
   202     0086                     _TRISB	set	134
   203     0085                     _TRISAbits	set	133
   204     009F                     _ADCON1bits	set	159
   205     009F                     _ADCON1	set	159
   206     009E                     _ADRESL	set	158
   207     0189                     _ANSELH	set	393
   208     0188                     _ANSEL	set	392
   209                           
   210                           	psect	cinit
   211     07FC                     start_initialization:	
   212                           ; #config settings
   213                           
   214     07FC                     __initialization:
   215     07FC                     end_of_initialization:	
   216                           ;End of C runtime variable initialization code
   217                           
   218     07FC                     __end_of__initialization:
   219     07FC  0183               	clrf	3
   220     07FD  120A  118A  2FC5   	ljmp	_main	;jump to C main() function
   221                           
   222                           	psect	cstackCOMMON
   223     0070                     __pcstackCOMMON:
   224     0070                     ?_main:
   225     0070                     ?_adc__read:	
   226                           ; 1 bytes @ 0x0
   227                           
   228                           
   229                           ; 2 bytes @ 0x0
   230     0070                     	ds	2
   231     0072                     ??_adc__read:
   232                           
   233                           ; 1 bytes @ 0x2
   234     0072                     	ds	1
   235     0073                     adc__read@channel:
   236                           
   237                           ; 1 bytes @ 0x3
   238     0073                     	ds	1
   239     0074                     ??_main:
   240                           
   241                           ; 1 bytes @ 0x4
   242     0074                     	ds	3
   243     0077                     main@value:
   244                           
   245                           ; 2 bytes @ 0x7
   246     0077                     	ds	2
   247                           
   248                           	psect	maintext
   249     07C5                     __pmaintext:	
   250 ;;
   251 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   252 ;;
   253 ;; *************** function _main *****************
   254 ;; Defined at:
   255 ;;		line 150 in file "main.c"
   256 ;; Parameters:    Size  Location     Type
   257 ;;		None
   258 ;; Auto vars:     Size  Location     Type
   259 ;;  value           2    7[COMMON] unsigned short 
   260 ;; Return value:  Size  Location     Type
   261 ;;                  1    wreg      void 
   262 ;; Registers used:
   263 ;;		wreg, status,2, status,0, pclath, cstack
   264 ;; Tracked objects:
   265 ;;		On entry : B00/0
   266 ;;		On exit  : 0/0
   267 ;;		Unchanged: 0/0
   268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   269 ;;      Params:         0       0       0       0       0
   270 ;;      Locals:         2       0       0       0       0
   271 ;;      Temps:          3       0       0       0       0
   272 ;;      Totals:         5       0       0       0       0
   273 ;;Total ram usage:        5 bytes
   274 ;; Hardware stack levels required when called: 1
   275 ;; This function calls:
   276 ;;		_adc__read
   277 ;; This function is called by:
   278 ;;		Startup code after reset
   279 ;; This function uses a non-reentrant model
   280 ;;
   281                           
   282     07C5                     _main:	
   283                           ;psect for function _main
   284                           
   285     07C5                     l642:	
   286                           ;incstack = 0
   287                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   288                           
   289                           
   290                           ;main.c: 152: ANSEL = (uint8_t)~0b1111111111111110; ANSELH = (uint8_t)(~0b11111111111111
      +                          10>>8); ADCON1 = 0b00000000; ADCON1bits.ADFM = 1; ADCON0bits.ADCS = 2; ADCON0bits.ADON =
      +                           1;;
   291     07C5  3001               	movlw	1
   292     07C6  1683               	bsf	3,5	;RP0=1, select bank3
   293     07C7  1703               	bsf	3,6	;RP1=1, select bank3
   294     07C8  0088               	movwf	8	;volatile
   295     07C9                     l644:
   296     07C9  0189               	clrf	9	;volatile
   297     07CA                     l646:
   298     07CA  1683               	bsf	3,5	;RP0=1, select bank1
   299     07CB  1303               	bcf	3,6	;RP1=0, select bank1
   300     07CC  019F               	clrf	31	;volatile
   301     07CD                     l648:
   302     07CD  179F               	bsf	31,7	;volatile
   303     07CE                     l650:
   304     07CE  1283               	bcf	3,5	;RP0=0, select bank0
   305     07CF  1303               	bcf	3,6	;RP1=0, select bank0
   306     07D0  081F               	movf	31,w	;volatile
   307     07D1  393F               	andlw	-193
   308     07D2  3880               	iorlw	128
   309     07D3  009F               	movwf	31	;volatile
   310     07D4                     l652:
   311     07D4  141F               	bsf	31,0	;volatile
   312     07D5                     l654:
   313                           
   314                           ;main.c: 153: TRISAbits.TRISA0 = 1;
   315     07D5  1683               	bsf	3,5	;RP0=1, select bank1
   316     07D6  1303               	bcf	3,6	;RP1=0, select bank1
   317     07D7  1405               	bsf	5,0	;volatile
   318     07D8                     l656:
   319                           
   320                           ;main.c: 154: TRISB = 0x00;
   321     07D8  0186               	clrf	6	;volatile
   322     07D9                     l658:
   323                           
   324                           ;main.c: 155: TRISC = 0b11111100;
   325     07D9  30FC               	movlw	252
   326     07DA  0087               	movwf	7	;volatile
   327     07DB                     l660:
   328     07DB                     l662:
   329                           
   330                           ;main.c: 158: value = adc__read(0);
   331     07DB  3000               	movlw	0
   332     07DC  120A  118A  27AD  120A  118A  	fcall	_adc__read
   333     07E1  0871               	movf	?_adc__read+1,w
   334     07E2  00F8               	movwf	main@value+1
   335     07E3  0870               	movf	?_adc__read,w
   336     07E4  00F7               	movwf	main@value
   337     07E5                     l664:
   338                           
   339                           ;main.c: 159: PORTB = (uint8_t)(unsigned char)(value);
   340     07E5  0877               	movf	main@value,w
   341     07E6  1283               	bcf	3,5	;RP0=0, select bank0
   342     07E7  1303               	bcf	3,6	;RP1=0, select bank0
   343     07E8  0086               	movwf	6	;volatile
   344     07E9                     l666:
   345                           
   346                           ;main.c: 160: PORTC = (uint8_t)(unsigned char)(value >> 8);
   347     07E9  0878               	movf	main@value+1,w
   348     07EA  0087               	movwf	7	;volatile
   349     07EB                     l668:
   350                           
   351                           ;main.c: 161: _delay((unsigned long)((250)*(10000000/4000.0)));
   352     07EB  3004               	movlw	4
   353     07EC  00F6               	movwf	??_main+2
   354     07ED  302C               	movlw	44
   355     07EE  00F5               	movwf	??_main+1
   356     07EF  30AB               	movlw	171
   357     07F0  00F4               	movwf	??_main
   358     07F1                     u47:
   359     07F1  0BF4               	decfsz	??_main,f
   360     07F2  2FF1               	goto	u47
   361     07F3  0BF5               	decfsz	??_main+1,f
   362     07F4  2FF1               	goto	u47
   363     07F5  0BF6               	decfsz	??_main+2,f
   364     07F6  2FF1               	goto	u47
   365     07F7  2FF8               	nop2
   366     07F8  2FDB               	goto	l662
   367     07F9  120A  118A  2800   	ljmp	start
   368     07FC                     __end_of_main:
   369                           
   370                           	psect	text1
   371     07AD                     __ptext1:	
   372 ;; *************** function _adc__read *****************
   373 ;; Defined at:
   374 ;;		line 142 in file "main.c"
   375 ;; Parameters:    Size  Location     Type
   376 ;;  channel         1    wreg     unsigned char 
   377 ;; Auto vars:     Size  Location     Type
   378 ;;  channel         1    3[COMMON] unsigned char 
   379 ;; Return value:  Size  Location     Type
   380 ;;                  2    0[COMMON] unsigned short 
   381 ;; Registers used:
   382 ;;		wreg, status,2, status,0
   383 ;; Tracked objects:
   384 ;;		On entry : 0/0
   385 ;;		On exit  : 0/0
   386 ;;		Unchanged: 0/0
   387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   388 ;;      Params:         2       0       0       0       0
   389 ;;      Locals:         1       0       0       0       0
   390 ;;      Temps:          1       0       0       0       0
   391 ;;      Totals:         4       0       0       0       0
   392 ;;Total ram usage:        4 bytes
   393 ;; Hardware stack levels used: 1
   394 ;; This function calls:
   395 ;;		Nothing
   396 ;; This function is called by:
   397 ;;		_main
   398 ;; This function uses a non-reentrant model
   399 ;;
   400                           
   401     07AD                     _adc__read:	
   402                           ;psect for function _adc__read
   403                           
   404                           
   405                           ;incstack = 0
   406                           ; Regs used in _adc__read: [wreg+status,2+status,0]
   407                           ;adc__read@channel stored from wreg
   408     07AD  00F3               	movwf	adc__read@channel
   409     07AE                     l634:
   410                           
   411                           ;main.c: 143:     ADCON0bits.CHS = channel;
   412     07AE  0873               	movf	adc__read@channel,w
   413     07AF  00F2               	movwf	??_adc__read
   414     07B0  0DF2               	rlf	??_adc__read,f
   415     07B1  0DF2               	rlf	??_adc__read,f
   416     07B2  1283               	bcf	3,5	;RP0=0, select bank0
   417     07B3  1303               	bcf	3,6	;RP1=0, select bank0
   418     07B4  081F               	movf	31,w	;volatile
   419     07B5  0672               	xorwf	??_adc__read,w
   420     07B6  39C3               	andlw	-61
   421     07B7  0672               	xorwf	??_adc__read,w
   422     07B8  009F               	movwf	31	;volatile
   423     07B9                     l636:
   424                           
   425                           ;main.c: 144:     ADCON0bits.GO_DONE = 1;
   426     07B9  149F               	bsf	31,1	;volatile
   427     07BA                     l35:	
   428                           ;main.c: 145:     while(ADCON0bits.GO_DONE == 1) {}
   429                           
   430     07BA  189F               	btfsc	31,1	;volatile
   431     07BB  2FBD               	goto	u31
   432     07BC  2FBE               	goto	u30
   433     07BD                     u31:
   434     07BD  2FBA               	goto	l35
   435     07BE                     u30:
   436     07BE                     l638:
   437                           
   438                           ;main.c: 146:     return (ADRESH << 8) | ADRESL;
   439     07BE  081E               	movf	30,w	;volatile
   440     07BF  00F1               	movwf	?_adc__read+1
   441     07C0  1683               	bsf	3,5	;RP0=1, select bank1
   442     07C1  1303               	bcf	3,6	;RP1=0, select bank1
   443     07C2  081E               	movf	30,w	;volatile
   444     07C3  00F0               	movwf	?_adc__read
   445     07C4                     l38:
   446     07C4  0008               	return
   447     07C5                     __end_of_adc__read:
   448     007E                     btemp	set	126	;btemp
   449     007E                     wtemp0	set	126
   450                           
   451                           	psect	config
   452                           
   453                           ;Config register CONFIG1 @ 0x2007
   454                           ;	Oscillator Selection bits
   455                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
   456                           ;	Watchdog Timer Enable bit
   457                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   458                           ;	Power-up Timer Enable bit
   459                           ;	PWRTE = OFF, PWRT disabled
   460                           ;	RE3/MCLR pin function select bit
   461                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   462                           ;	Code Protection bit
   463                           ;	CP = OFF, Program memory code protection is disabled
   464                           ;	Data Code Protection bit
   465                           ;	CPD = OFF, Data memory code protection is disabled
   466                           ;	Brown Out Reset Selection bits
   467                           ;	BOREN = OFF, BOR disabled
   468                           ;	Internal External Switchover bit
   469                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   470                           ;	Fail-Safe Clock Monitor Enabled bit
   471                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   472                           ;	Low Voltage Programming Enable bit
   473                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   474                           ;	In-Circuit Debugger Mode bit
   475                           ;	DEBUG = 0x1, unprogrammed default
   476     2007                     	org	8199
   477     2007  20D2               	dw	8402
   478                           
   479                           ;Config register CONFIG2 @ 0x2008
   480                           ;	Brown-out Reset Selection bit
   481                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   482                           ;	Flash Program Memory Self Write Enable bits
   483                           ;	WRT = OFF, Write protection off
   484     2008                     	org	8200
   485     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_adc__read

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0      68
                                              4 COMMON     5     5      0
                          _adc__read
 ---------------------------------------------------------------------------------
 (1) _adc__read                                            4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc__read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Jun  6 15:12:27 2024

                     l35 07BA                       l38 07C4                       u30 07BE  
                     u31 07BD                       u47 07F1                      l634 07AE  
                    l650 07CE                      l642 07C5                      l636 07B9  
                    l660 07DB                      l652 07D4                      l644 07C9  
                    l638 07BE                      l662 07DB                      l654 07D5  
                    l646 07CA                      l664 07E5                      l656 07D8  
                    l648 07CD                      l666 07E9                      l658 07D9  
                    l668 07EB                     _main 07C5                     btemp 007E  
                   start 0000                    ?_main 0070                    _ANSEL 0188  
                  _PORTB 0006                    _PORTC 0007                    _TRISB 0086  
                  _TRISC 0087                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07FC                   ??_main 0074  
                 _ADCON1 009F                   _ADRESH 001E                   _ADRESL 009E  
                 _ANSELH 0189  __end_of__initialization 07FC           __pcstackCOMMON 0070  
             __pmaintext 07C5        __end_of_adc__read 07C5                  __ptext1 07AD  
   end_of_initialization 07FC                _TRISAbits 0085         adc__read@channel 0073  
    start_initialization 07FC                ___latbits 0002                _adc__read 07AD  
             ?_adc__read 0070               _ADCON0bits 001F               _ADCON1bits 009F  
              main@value 0077              ??_adc__read 0072  
