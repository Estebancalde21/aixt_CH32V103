

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Feb 11 10:51:11 2024

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Version 2.40
    15                           ; Generated 17/11/2021 GMT
    16                           ; 
    17                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F886 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0000                     	;# 
    50     0001                     	;# 
    51     0002                     	;# 
    52     0003                     	;# 
    53     0004                     	;# 
    54     0005                     	;# 
    55     0006                     	;# 
    56     0007                     	;# 
    57     0009                     	;# 
    58     000A                     	;# 
    59     000B                     	;# 
    60     000C                     	;# 
    61     000D                     	;# 
    62     000E                     	;# 
    63     000E                     	;# 
    64     000F                     	;# 
    65     0010                     	;# 
    66     0011                     	;# 
    67     0012                     	;# 
    68     0013                     	;# 
    69     0014                     	;# 
    70     0015                     	;# 
    71     0015                     	;# 
    72     0016                     	;# 
    73     0017                     	;# 
    74     0018                     	;# 
    75     0019                     	;# 
    76     001A                     	;# 
    77     001B                     	;# 
    78     001B                     	;# 
    79     001C                     	;# 
    80     001D                     	;# 
    81     001E                     	;# 
    82     001F                     	;# 
    83     0081                     	;# 
    84     0085                     	;# 
    85     0086                     	;# 
    86     0087                     	;# 
    87     0089                     	;# 
    88     008C                     	;# 
    89     008D                     	;# 
    90     008E                     	;# 
    91     008F                     	;# 
    92     0090                     	;# 
    93     0091                     	;# 
    94     0092                     	;# 
    95     0093                     	;# 
    96     0093                     	;# 
    97     0093                     	;# 
    98     0094                     	;# 
    99     0095                     	;# 
   100     0096                     	;# 
   101     0097                     	;# 
   102     0098                     	;# 
   103     0099                     	;# 
   104     009A                     	;# 
   105     009B                     	;# 
   106     009C                     	;# 
   107     009D                     	;# 
   108     009E                     	;# 
   109     009F                     	;# 
   110     0105                     	;# 
   111     0107                     	;# 
   112     0108                     	;# 
   113     0109                     	;# 
   114     010C                     	;# 
   115     010C                     	;# 
   116     010D                     	;# 
   117     010E                     	;# 
   118     010F                     	;# 
   119     0185                     	;# 
   120     0187                     	;# 
   121     0188                     	;# 
   122     0189                     	;# 
   123     018C                     	;# 
   124     018D                     	;# 
   125     0000                     	;# 
   126     0001                     	;# 
   127     0002                     	;# 
   128     0003                     	;# 
   129     0004                     	;# 
   130     0005                     	;# 
   131     0006                     	;# 
   132     0007                     	;# 
   133     0009                     	;# 
   134     000A                     	;# 
   135     000B                     	;# 
   136     000C                     	;# 
   137     000D                     	;# 
   138     000E                     	;# 
   139     000E                     	;# 
   140     000F                     	;# 
   141     0010                     	;# 
   142     0011                     	;# 
   143     0012                     	;# 
   144     0013                     	;# 
   145     0014                     	;# 
   146     0015                     	;# 
   147     0015                     	;# 
   148     0016                     	;# 
   149     0017                     	;# 
   150     0018                     	;# 
   151     0019                     	;# 
   152     001A                     	;# 
   153     001B                     	;# 
   154     001B                     	;# 
   155     001C                     	;# 
   156     001D                     	;# 
   157     001E                     	;# 
   158     001F                     	;# 
   159     0081                     	;# 
   160     0085                     	;# 
   161     0086                     	;# 
   162     0087                     	;# 
   163     0089                     	;# 
   164     008C                     	;# 
   165     008D                     	;# 
   166     008E                     	;# 
   167     008F                     	;# 
   168     0090                     	;# 
   169     0091                     	;# 
   170     0092                     	;# 
   171     0093                     	;# 
   172     0093                     	;# 
   173     0093                     	;# 
   174     0094                     	;# 
   175     0095                     	;# 
   176     0096                     	;# 
   177     0097                     	;# 
   178     0098                     	;# 
   179     0099                     	;# 
   180     009A                     	;# 
   181     009B                     	;# 
   182     009C                     	;# 
   183     009D                     	;# 
   184     009E                     	;# 
   185     009F                     	;# 
   186     0105                     	;# 
   187     0107                     	;# 
   188     0108                     	;# 
   189     0109                     	;# 
   190     010C                     	;# 
   191     010C                     	;# 
   192     010D                     	;# 
   193     010E                     	;# 
   194     010F                     	;# 
   195     0185                     	;# 
   196     0187                     	;# 
   197     0188                     	;# 
   198     0189                     	;# 
   199     018C                     	;# 
   200     018D                     	;# 
   201     0019                     _TXREG	set	25
   202     0007                     _PORTCbits	set	7
   203     001A                     _RCREG	set	26
   204     0018                     _RCSTAbits	set	24
   205     000C                     _PIR1bits	set	12
   206     0064                     _TXIF	set	100
   207     0098                     _TXSTAbits	set	152
   208     0099                     _SPBRG	set	153
   209     0087                     _TRISCbits	set	135
   210     0188                     _ANSEL	set	392
   211     0189                     _ANSELH	set	393
   212                           
   213                           	psect	strings
   214     0003                     __pstrings:
   215     0003                     stringtab:
   216     0003                     __stringtab:
   217     0003                     stringcode:	
   218                           ;	String table - string pointers are 1 byte each
   219                           
   220     0003                     stringdir:
   221     0003  3000               	movlw	high stringdir
   222     0004  008A               	movwf	10
   223     0005  0804               	movf	4,w
   224     0006  0A84               	incf	4,f
   225     0007  0782               	addwf	2,f
   226     0008                     __stringbase:
   227     0008  3400               	retlw	0
   228     0009                     __end_of__stringtab:
   229     0009                     STR_1:
   230     0009  346C               	retlw	108	;'l'
   231     000A  3465               	retlw	101	;'e'
   232     000B  3464               	retlw	100	;'d'
   233     000C  3431               	retlw	49	;'1'
   234     000D  343A               	retlw	58	;':'
   235     000E  3420               	retlw	32	;' '
   236     000F  3445               	retlw	69	;'E'
   237     0010  346E               	retlw	110	;'n'
   238     0011  3463               	retlw	99	;'c'
   239     0012  3465               	retlw	101	;'e'
   240     0013  346E               	retlw	110	;'n'
   241     0014  3464               	retlw	100	;'d'
   242     0015  3469               	retlw	105	;'i'
   243     0016  3464               	retlw	100	;'d'
   244     0017  346F               	retlw	111	;'o'
   245     0018  340D               	retlw	13
   246     0019  340A               	retlw	10
   247     001A  3400               	retlw	0
   248     001B                     STR_3:
   249     001B  346C               	retlw	108	;'l'
   250     001C  3465               	retlw	101	;'e'
   251     001D  3464               	retlw	100	;'d'
   252     001E  3431               	retlw	49	;'1'
   253     001F  343A               	retlw	58	;':'
   254     0020  3420               	retlw	32	;' '
   255     0021  3441               	retlw	65	;'A'
   256     0022  3470               	retlw	112	;'p'
   257     0023  3461               	retlw	97	;'a'
   258     0024  3467               	retlw	103	;'g'
   259     0025  3461               	retlw	97	;'a'
   260     0026  3464               	retlw	100	;'d'
   261     0027  346F               	retlw	111	;'o'
   262     0028  340D               	retlw	13
   263     0029  340A               	retlw	10
   264     002A  3400               	retlw	0
   265     001B                     
   266                           	psect	cinit
   267     07F9                     start_initialization:	
   268                           ; #config settings
   269                           
   270     07F9                     __initialization:
   271                           
   272                           ; Clear objects allocated to BANK0
   273     07F9  1283               	bcf	3,5	;RP0=0, select bank0
   274     07FA  1303               	bcf	3,6	;RP1=0, select bank0
   275     07FB  01A0               	clrf	__pbssBANK0& (0+127)
   276     07FC                     end_of_initialization:	
   277                           ;End of C runtime variable initialization code
   278                           
   279     07FC                     __end_of__initialization:
   280     07FC  0183               	clrf	3
   281     07FD  120A  118A  2F38   	ljmp	_main	;jump to C main() function
   282                           
   283                           	psect	bssBANK0
   284     0020                     __pbssBANK0:
   285     0020                     _datos:
   286     0020                     	ds	1
   287                           
   288                           	psect	cstackCOMMON
   289     0070                     __pcstackCOMMON:
   290     0070                     ?_uart_read:
   291     0070                     ??_uart_read:	
   292                           ; 1 bytes @ 0x0
   293                           
   294     0070                     ?_main:	
   295                           ; 1 bytes @ 0x0
   296                           
   297     0070                     ??_main:	
   298                           ; 1 bytes @ 0x0
   299                           
   300                           
   301                           ; 1 bytes @ 0x0
   302     0070                     	ds	2
   303     0072                     main@i:
   304                           
   305                           ; 2 bytes @ 0x2
   306     0072                     	ds	2
   307     0074                     main@i_221:
   308                           
   309                           ; 2 bytes @ 0x4
   310     0074                     	ds	2
   311     0076                     main@i_224:
   312                           
   313                           ; 2 bytes @ 0x6
   314     0076                     	ds	2
   315     0078                     main@i_227:
   316                           
   317                           ; 2 bytes @ 0x8
   318     0078                     	ds	2
   319     007A                     main@caracter:
   320                           
   321                           ; 1 bytes @ 0xA
   322     007A                     	ds	1
   323     007B                     main@caracter_220:
   324                           
   325                           ; 1 bytes @ 0xB
   326     007B                     	ds	1
   327     007C                     main@caracter_223:
   328                           
   329                           ; 1 bytes @ 0xC
   330     007C                     	ds	1
   331     007D                     main@caracter_226:
   332                           
   333                           ; 1 bytes @ 0xD
   334     007D                     	ds	1
   335                           
   336                           	psect	maintext
   337     0738                     __pmaintext:	
   338 ;;
   339 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   340 ;;
   341 ;; *************** function _main *****************
   342 ;; Defined at:
   343 ;;		line 38 in file "UARTRECEP.c"
   344 ;; Parameters:    Size  Location     Type
   345 ;;		None
   346 ;; Auto vars:     Size  Location     Type
   347 ;;  i               2    8[COMMON] int 
   348 ;;  i               2    6[COMMON] int 
   349 ;;  i               2    4[COMMON] int 
   350 ;;  i               2    2[COMMON] int 
   351 ;;  caracter        1   13[COMMON] unsigned char 
   352 ;;  caracter        1   12[COMMON] unsigned char 
   353 ;;  caracter        1   11[COMMON] unsigned char 
   354 ;;  caracter        1   10[COMMON] unsigned char 
   355 ;; Return value:  Size  Location     Type
   356 ;;                  1    wreg      void 
   357 ;; Registers used:
   358 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   359 ;; Tracked objects:
   360 ;;		On entry : B00/0
   361 ;;		On exit  : 0/0
   362 ;;		Unchanged: 0/0
   363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   364 ;;      Params:         0       0       0       0       0
   365 ;;      Locals:        12       0       0       0       0
   366 ;;      Temps:          2       0       0       0       0
   367 ;;      Totals:        14       0       0       0       0
   368 ;;Total ram usage:       14 bytes
   369 ;; Hardware stack levels required when called: 1
   370 ;; This function calls:
   371 ;;		_uart_read
   372 ;; This function is called by:
   373 ;;		Startup code after reset
   374 ;; This function uses a non-reentrant model
   375 ;;
   376                           
   377     0738                     _main:	
   378                           ;psect for function _main
   379                           
   380     0738                     l770:	
   381                           ;incstack = 0
   382                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   383                           
   384                           
   385                           ;UARTRECEP.c: 40:     ANSELH = 0b00000000;
   386     0738  1683               	bsf	3,5	;RP0=1, select bank3
   387     0739  1703               	bsf	3,6	;RP1=1, select bank3
   388     073A  0189               	clrf	9	;volatile
   389                           
   390                           ;UARTRECEP.c: 41:     ANSEL = 0b00000000;
   391     073B  0188               	clrf	8	;volatile
   392     073C                     l772:
   393                           
   394                           ;UARTRECEP.c: 43:     TRISCbits.TRISC0 = 0;
   395     073C  1683               	bsf	3,5	;RP0=1, select bank1
   396     073D  1303               	bcf	3,6	;RP1=0, select bank1
   397     073E  1007               	bcf	7,0	;volatile
   398     073F                     l774:
   399                           
   400                           ;UARTRECEP.c: 44:     TRISCbits.TRISC1 = 0;
   401     073F  1087               	bcf	7,1	;volatile
   402     0740                     l776:
   403                           
   404                           ;UARTRECEP.c: 46:     PORTCbits.RC0 = 0;
   405     0740  1283               	bcf	3,5	;RP0=0, select bank0
   406     0741  1303               	bcf	3,6	;RP1=0, select bank0
   407     0742  1007               	bcf	7,0	;volatile
   408     0743                     l778:
   409                           
   410                           ;UARTRECEP.c: 47:     PORTCbits.RC1 = 0;
   411     0743  1087               	bcf	7,1	;volatile
   412     0744                     l780:
   413                           
   414                           ;UARTRECEP.c: 49:     SPBRG = 51; TXSTAbits.SYNC = 0; TXSTAbits.BRGH = 1; RCSTAbits.SPEN
      +                           = 1; TXSTAbits.TXEN = 1; RCSTAbits.CREN = 1; TXSTAbits.TX9 = 0;;
   415     0744  3033               	movlw	51
   416     0745  1683               	bsf	3,5	;RP0=1, select bank1
   417     0746  1303               	bcf	3,6	;RP1=0, select bank1
   418     0747  0099               	movwf	25	;volatile
   419     0748                     l782:
   420     0748  1218               	bcf	24,4	;volatile
   421     0749                     l784:
   422     0749  1518               	bsf	24,2	;volatile
   423     074A                     l786:
   424     074A  1283               	bcf	3,5	;RP0=0, select bank0
   425     074B  1303               	bcf	3,6	;RP1=0, select bank0
   426     074C  1798               	bsf	24,7	;volatile
   427     074D                     l788:
   428     074D  1683               	bsf	3,5	;RP0=1, select bank1
   429     074E  1303               	bcf	3,6	;RP1=0, select bank1
   430     074F  1698               	bsf	24,5	;volatile
   431     0750                     l790:
   432     0750  1283               	bcf	3,5	;RP0=0, select bank0
   433     0751  1303               	bcf	3,6	;RP1=0, select bank0
   434     0752  1618               	bsf	24,4	;volatile
   435     0753                     l792:
   436     0753  1683               	bsf	3,5	;RP0=1, select bank1
   437     0754  1303               	bcf	3,6	;RP1=0, select bank1
   438     0755  1318               	bcf	24,6	;volatile
   439     0756                     l794:
   440                           
   441                           ;UARTRECEP.c: 53:         if((PIR1bits.RCIF ? 1 : 0)> 0){
   442     0756  1283               	bcf	3,5	;RP0=0, select bank0
   443     0757  1E8C               	btfss	12,5	;volatile
   444     0758  2F5A               	goto	u141
   445     0759  2F5B               	goto	u140
   446     075A                     u141:
   447     075A  2FE0               	goto	l824
   448     075B                     u140:
   449     075B                     l796:
   450                           
   451                           ;UARTRECEP.c: 55:             datos = uart_read();
   452     075B  120A  118A  2729  120A  118A  	fcall	_uart_read
   453     0760  1283               	bcf	3,5	;RP0=0, select bank0
   454     0761  1303               	bcf	3,6	;RP1=0, select bank0
   455     0762  00A0               	movwf	_datos
   456     0763  2FE0               	goto	l824
   457     0764                     l39:	
   458                           ;UARTRECEP.c: 61:             case 'a':
   459                           
   460                           
   461                           ;UARTRECEP.c: 63:                 PORTCbits.RC0 = 1;
   462     0764  1407               	bsf	7,0	;volatile
   463     0765                     l798:
   464                           
   465                           ;UARTRECEP.c: 64:                 { char caracter; for (int i = 0; (caracter = ("led1: E
      +                          ncendido\r\n")[i]); ++i) { while (!TXIF); TXREG = caracter; } };
   466     0765  01F2               	clrf	main@i
   467     0766  01F3               	clrf	main@i+1
   468     0767  2F74               	goto	l802
   469     0768                     l42:
   470     0768  1E0C               	btfss	12,4	;volatile
   471     0769  2F6B               	goto	u151
   472     076A  2F6C               	goto	u150
   473     076B                     u151:
   474     076B  2F68               	goto	l42
   475     076C                     u150:
   476     076C                     l800:
   477     076C  087A               	movf	main@caracter,w
   478     076D  0099               	movwf	25	;volatile
   479     076E  3001               	movlw	1
   480     076F  07F2               	addwf	main@i,f
   481     0770  1803               	skipnc
   482     0771  0AF3               	incf	main@i+1,f
   483     0772  3000               	movlw	0
   484     0773  07F3               	addwf	main@i+1,f
   485     0774                     l802:
   486     0774  0872               	movf	main@i,w
   487     0775  3E01               	addlw	low ((STR_1-__stringbase)| (0+32768))
   488     0776  0084               	movwf	4
   489     0777  120A  118A  2003  120A  118A  	fcall	stringdir
   490     077C  00FA               	movwf	main@caracter
   491     077D  087A               	movf	main@caracter,w
   492     077E  1D03               	btfss	3,2
   493     077F  2F81               	goto	u161
   494     0780  2F82               	goto	u160
   495     0781                     u161:
   496     0781  2F68               	goto	l42
   497     0782                     u160:
   498     0782  2F56               	goto	l794
   499     0783                     l47:	
   500                           ;UARTRECEP.c: 67:             case 'b':
   501                           
   502                           
   503                           ;UARTRECEP.c: 69:                 PORTCbits.RC0 = 0;
   504     0783  1007               	bcf	7,0	;volatile
   505     0784                     l804:
   506                           
   507                           ;UARTRECEP.c: 70:                 { char caracter; for (int i = 0; (caracter = ("led1: A
      +                          pagado\r\n")[i]); ++i) { while (!TXIF); TXREG = caracter; } };
   508     0784  01F4               	clrf	main@i_221
   509     0785  01F5               	clrf	main@i_221+1
   510     0786  2F93               	goto	l808
   511     0787                     l50:
   512     0787  1E0C               	btfss	12,4	;volatile
   513     0788  2F8A               	goto	u171
   514     0789  2F8B               	goto	u170
   515     078A                     u171:
   516     078A  2F87               	goto	l50
   517     078B                     u170:
   518     078B                     l806:
   519     078B  087B               	movf	main@caracter_220,w
   520     078C  0099               	movwf	25	;volatile
   521     078D  3001               	movlw	1
   522     078E  07F4               	addwf	main@i_221,f
   523     078F  1803               	skipnc
   524     0790  0AF5               	incf	main@i_221+1,f
   525     0791  3000               	movlw	0
   526     0792  07F5               	addwf	main@i_221+1,f
   527     0793                     l808:
   528     0793  0874               	movf	main@i_221,w
   529     0794  3E13               	addlw	low ((STR_3-__stringbase)| (0+32768))
   530     0795  0084               	movwf	4
   531     0796  120A  118A  2003  120A  118A  	fcall	stringdir
   532     079B  00FB               	movwf	main@caracter_220
   533     079C  087B               	movf	main@caracter_220,w
   534     079D  1D03               	btfss	3,2
   535     079E  2FA0               	goto	u181
   536     079F  2FA1               	goto	u180
   537     07A0                     u181:
   538     07A0  2F87               	goto	l50
   539     07A1                     u180:
   540     07A1  2F56               	goto	l794
   541     07A2                     l54:	
   542                           ;UARTRECEP.c: 73:             case 'q':
   543                           
   544                           
   545                           ;UARTRECEP.c: 75:                 PORTCbits.RC1 = 1;
   546     07A2  1487               	bsf	7,1	;volatile
   547     07A3                     l810:
   548                           
   549                           ;UARTRECEP.c: 76:                 { char caracter; for (int i = 0; (caracter = ("led1: E
      +                          ncendido\r\n")[i]); ++i) { while (!TXIF); TXREG = caracter; } };
   550     07A3  01F6               	clrf	main@i_224
   551     07A4  01F7               	clrf	main@i_224+1
   552     07A5  2FB2               	goto	l814
   553     07A6                     l57:
   554     07A6  1E0C               	btfss	12,4	;volatile
   555     07A7  2FA9               	goto	u191
   556     07A8  2FAA               	goto	u190
   557     07A9                     u191:
   558     07A9  2FA6               	goto	l57
   559     07AA                     u190:
   560     07AA                     l812:
   561     07AA  087C               	movf	main@caracter_223,w
   562     07AB  0099               	movwf	25	;volatile
   563     07AC  3001               	movlw	1
   564     07AD  07F6               	addwf	main@i_224,f
   565     07AE  1803               	skipnc
   566     07AF  0AF7               	incf	main@i_224+1,f
   567     07B0  3000               	movlw	0
   568     07B1  07F7               	addwf	main@i_224+1,f
   569     07B2                     l814:
   570     07B2  0876               	movf	main@i_224,w
   571     07B3  3E01               	addlw	low ((STR_1-__stringbase)| (0+32768))
   572     07B4  0084               	movwf	4
   573     07B5  120A  118A  2003  120A  118A  	fcall	stringdir
   574     07BA  00FC               	movwf	main@caracter_223
   575     07BB  087C               	movf	main@caracter_223,w
   576     07BC  1D03               	btfss	3,2
   577     07BD  2FBF               	goto	u201
   578     07BE  2FC0               	goto	u200
   579     07BF                     u201:
   580     07BF  2FA6               	goto	l57
   581     07C0                     u200:
   582     07C0  2F56               	goto	l794
   583     07C1                     l61:	
   584                           ;UARTRECEP.c: 79:             case 'w':
   585                           
   586                           
   587                           ;UARTRECEP.c: 81:                 PORTCbits.RC1 = 0;
   588     07C1  1087               	bcf	7,1	;volatile
   589     07C2                     l816:
   590                           
   591                           ;UARTRECEP.c: 82:                 { char caracter; for (int i = 0; (caracter = ("led1: A
      +                          pagado\r\n")[i]); ++i) { while (!TXIF); TXREG = caracter; } };
   592     07C2  01F8               	clrf	main@i_227
   593     07C3  01F9               	clrf	main@i_227+1
   594     07C4  2FD1               	goto	l820
   595     07C5                     l64:
   596     07C5  1E0C               	btfss	12,4	;volatile
   597     07C6  2FC8               	goto	u211
   598     07C7  2FC9               	goto	u210
   599     07C8                     u211:
   600     07C8  2FC5               	goto	l64
   601     07C9                     u210:
   602     07C9                     l818:
   603     07C9  087D               	movf	main@caracter_226,w
   604     07CA  0099               	movwf	25	;volatile
   605     07CB  3001               	movlw	1
   606     07CC  07F8               	addwf	main@i_227,f
   607     07CD  1803               	skipnc
   608     07CE  0AF9               	incf	main@i_227+1,f
   609     07CF  3000               	movlw	0
   610     07D0  07F9               	addwf	main@i_227+1,f
   611     07D1                     l820:
   612     07D1  0878               	movf	main@i_227,w
   613     07D2  3E13               	addlw	low ((STR_3-__stringbase)| (0+32768))
   614     07D3  0084               	movwf	4
   615     07D4  120A  118A  2003  120A  118A  	fcall	stringdir
   616     07D9  00FD               	movwf	main@caracter_226
   617     07DA  087D               	movf	main@caracter_226,w
   618     07DB  1D03               	btfss	3,2
   619     07DC  2FDE               	goto	u221
   620     07DD  2FDF               	goto	u220
   621     07DE                     u221:
   622     07DE  2FC5               	goto	l64
   623     07DF                     u220:
   624     07DF  2F56               	goto	l794
   625     07E0                     l824:
   626     07E0  0820               	movf	_datos,w
   627     07E1  00F0               	movwf	??_main
   628     07E2  01F1               	clrf	??_main+1
   629                           
   630                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   631                           ; Switch size 1, requested type "simple"
   632                           ; Number of cases is 1, Range of values is 0 to 0
   633                           ; switch strategies available:
   634                           ; Name         Instructions Cycles
   635                           ; simple_byte            4     3 (average)
   636                           ; direct_byte           11     8 (fixed)
   637                           ; jumptable            260     6 (fixed)
   638                           ;	Chosen strategy is simple_byte
   639     07E3  0871               	movf	??_main+1,w
   640     07E4  3A00               	xorlw	0	; case 0
   641     07E5  1903               	skipnz
   642     07E6  2FE8               	goto	l862
   643     07E7  2F56               	goto	l794
   644     07E8                     l862:
   645                           
   646                           ; Switch size 1, requested type "simple"
   647                           ; Number of cases is 4, Range of values is 97 to 119
   648                           ; switch strategies available:
   649                           ; Name         Instructions Cycles
   650                           ; simple_byte           13     7 (average)
   651                           ; direct_byte           80    11 (fixed)
   652                           ; jumptable            263     9 (fixed)
   653                           ;	Chosen strategy is simple_byte
   654     07E8  0870               	movf	??_main,w
   655     07E9  3A61               	xorlw	97	; case 97
   656     07EA  1903               	skipnz
   657     07EB  2F64               	goto	l39
   658     07EC  3A03               	xorlw	3	; case 98
   659     07ED  1903               	skipnz
   660     07EE  2F83               	goto	l47
   661     07EF  3A13               	xorlw	19	; case 113
   662     07F0  1903               	skipnz
   663     07F1  2FA2               	goto	l54
   664     07F2  3A06               	xorlw	6	; case 119
   665     07F3  1903               	skipnz
   666     07F4  2FC1               	goto	l61
   667     07F5  2F56               	goto	l794
   668     07F6  120A  118A  2800   	ljmp	start
   669     07F9                     __end_of_main:
   670                           
   671                           	psect	text1
   672     0729                     __ptext1:	
   673 ;; *************** function _uart_read *****************
   674 ;; Defined at:
   675 ;;		line 33 in file "./../../api/machine/uart.c"
   676 ;; Parameters:    Size  Location     Type
   677 ;;		None
   678 ;; Auto vars:     Size  Location     Type
   679 ;;		None
   680 ;; Return value:  Size  Location     Type
   681 ;;                  1    wreg      unsigned char 
   682 ;; Registers used:
   683 ;;		wreg
   684 ;; Tracked objects:
   685 ;;		On entry : 0/0
   686 ;;		On exit  : 0/0
   687 ;;		Unchanged: 0/0
   688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   689 ;;      Params:         0       0       0       0       0
   690 ;;      Locals:         0       0       0       0       0
   691 ;;      Temps:          0       0       0       0       0
   692 ;;      Totals:         0       0       0       0       0
   693 ;;Total ram usage:        0 bytes
   694 ;; Hardware stack levels used: 1
   695 ;; This function calls:
   696 ;;		Nothing
   697 ;; This function is called by:
   698 ;;		_main
   699 ;; This function uses a non-reentrant model
   700 ;;
   701                           
   702     0729                     _uart_read:	
   703                           ;psect for function _uart_read
   704                           
   705     0729                     l762:	
   706                           ;incstack = 0
   707                           ; Regs used in _uart_read: [wreg]
   708                           
   709     0729                     l25:	
   710                           ;./../../api/machine/uart.c: 35:     while(PIR1bits.RCIF == 0);
   711                           
   712     0729  1283               	bcf	3,5	;RP0=0, select bank0
   713     072A  1303               	bcf	3,6	;RP1=0, select bank0
   714     072B  1E8C               	btfss	12,5	;volatile
   715     072C  2F2E               	goto	u121
   716     072D  2F2F               	goto	u120
   717     072E                     u121:
   718     072E  2F29               	goto	l25
   719     072F                     u120:
   720     072F                     l27:
   721                           
   722                           ;./../../api/machine/uart.c: 36:     if(RCSTAbits.OERR == 1)
   723     072F  1C98               	btfss	24,1	;volatile
   724     0730  2F32               	goto	u131
   725     0731  2F33               	goto	u130
   726     0732                     u131:
   727     0732  2F35               	goto	l28
   728     0733                     u130:
   729     0733                     l764:
   730                           
   731                           ;./../../api/machine/uart.c: 37:     {;./../../api/machine/uart.c: 38:         RCSTAbits
      +                          .CREN = 0;
   732     0733  1218               	bcf	24,4	;volatile
   733                           
   734                           ;./../../api/machine/uart.c: 39:         RCSTAbits.CREN = 1;
   735     0734  1618               	bsf	24,4	;volatile
   736     0735                     l28:	
   737                           ;./../../api/machine/uart.c: 40:     }
   738                           
   739                           
   740                           ;./../../api/machine/uart.c: 41:     PIR1bits.RCIF = 0;
   741     0735  128C               	bcf	12,5	;volatile
   742     0736                     l766:
   743                           
   744                           ;./../../api/machine/uart.c: 42:     return RCREG;
   745     0736  081A               	movf	26,w	;volatile
   746     0737                     l29:
   747     0737  0008               	return
   748     0738                     __end_of_uart_read:
   749     007E                     btemp	set	126	;btemp
   750     007E                     wtemp0	set	126
   751                           
   752                           	psect	idloc
   753                           
   754                           ;Config register IDLOC0 @ 0x2000
   755                           ;	unspecified, using default values
   756     2000                     	org	8192
   757     2000  3FFF               	dw	16383
   758                           
   759                           ;Config register IDLOC1 @ 0x2001
   760                           ;	unspecified, using default values
   761     2001                     	org	8193
   762     2001  3FFF               	dw	16383
   763                           
   764                           ;Config register IDLOC2 @ 0x2002
   765                           ;	unspecified, using default values
   766     2002                     	org	8194
   767     2002  3FFF               	dw	16383
   768                           
   769                           ;Config register IDLOC3 @ 0x2003
   770                           ;	unspecified, using default values
   771     2003                     	org	8195
   772     2003  3FFF               	dw	16383
   773                           
   774                           	psect	config
   775                           
   776                           ;Config register CONFIG1 @ 0x2007
   777                           ;	Oscillator Selection bits
   778                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
   779                           ;	Watchdog Timer Enable bit
   780                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   781                           ;	Power-up Timer Enable bit
   782                           ;	PWRTE = OFF, PWRT disabled
   783                           ;	RE3/MCLR pin function select bit
   784                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   785                           ;	Code Protection bit
   786                           ;	CP = OFF, Program memory code protection is disabled
   787                           ;	Data Code Protection bit
   788                           ;	CPD = OFF, Data memory code protection is disabled
   789                           ;	Brown Out Reset Selection bits
   790                           ;	BOREN = OFF, BOR disabled
   791                           ;	Internal External Switchover bit
   792                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   793                           ;	Fail-Safe Clock Monitor Enabled bit
   794                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   795                           ;	Low Voltage Programming Enable bit
   796                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   797                           ;	In-Circuit Debugger Mode bit
   798                           ;	DEBUG = 0x1, unprogrammed default
   799     2007                     	org	8199
   800     2007  20D2               	dw	8402
   801                           
   802                           ;Config register CONFIG2 @ 0x2008
   803                           ;	Brown-out Reset Selection bit
   804                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   805                           ;	Flash Program Memory Self Write Enable bits
   806                           ;	WRT = OFF, Write protection off
   807     2008                     	org	8200
   808     2008  3FFF               	dw	16383

Data Sizes:
    Strings     34
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      0       1
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0     188
                                              0 COMMON    14    14      0
                          _uart_read
 ---------------------------------------------------------------------------------
 (1) _uart_read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _uart_read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       1       5        1.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       F      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Feb 11 10:51:11 2024

                      pc 0002                       l25 0729                       l50 0787  
                     l42 0768                       l27 072F                       l28 0735  
                     l29 0737                       l61 07C1                       l54 07A2  
                     l47 0783                       l39 0764                       l64 07C5  
                     l57 07A6                       fsr 0004                      l800 076C  
                    l810 07A3                      l802 0774                      l820 07D1  
                    l812 07AA                      l804 0784                      l814 07B2  
                    l806 078B                      l816 07C2                      l808 0793  
                    l824 07E0                      l762 0729                      l818 07C9  
                    l770 0738                      l764 0733                      l780 0744  
                    l772 073C                      l766 0736                      l862 07E8  
                    l790 0750                      l782 0748                      l774 073F  
                    l792 0753                      l784 0749                      l776 0740  
                    l794 0756                      l786 074A                      l778 0743  
                    l796 075B                      l788 074D                      l798 0765  
                    u120 072F                      u200 07C0                      u121 072E  
                    u201 07BF                      u130 0733                      u210 07C9  
                    u131 0732                      u211 07C8                      u220 07DF  
                    u140 075B                      u221 07DE                      u141 075A  
                    u150 076C                      u151 076B                      u160 0782  
                    u161 0781                      u170 078B                      u171 078A  
                    u180 07A1                      u181 07A0                      u190 07AA  
                    u191 07A9                      fsr0 0004                     STR_1 0009  
                   STR_2 0009                     STR_3 001B                     STR_4 001B  
                   STR_6 0009                     STR_8 001B                     _TXIF 0064  
                   _main 0738                     btemp 007E                     start 0000  
           main@caracter 007A                    ?_main 0070                    _ANSEL 0188  
                  _RCREG 001A                    _SPBRG 0099                    _TXREG 0019  
       main@caracter_220 007B         main@caracter_223 007C         main@caracter_226 007D  
                  _datos 0020                    main@i 0072                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07F9  
           __end_of_main 07F9                   ??_main 0070                   _ANSELH 0189  
__end_of__initialization 07FC           __pcstackCOMMON 0070               __pbssBANK0 0020  
             __pmaintext 0738               __stringtab 0003                  __ptext1 0729  
   end_of_initialization 07FC        __end_of_uart_read 0738                _RCSTAbits 0018  
              _PORTCbits 0007                _TRISCbits 0087                _TXSTAbits 0098  
    start_initialization 07F9                ___latbits 0002                __pstrings 0003  
               _PIR1bits 000C                _uart_read 0729              __stringbase 0008  
              main@i_221 0074                main@i_224 0076                main@i_227 0078  
             ?_uart_read 0070       __end_of__stringtab 0009                stringcode 0003  
            ??_uart_read 0070                 stringdir 0003                 stringtab 0003  
