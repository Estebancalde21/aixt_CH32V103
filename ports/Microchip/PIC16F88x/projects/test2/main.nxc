// This NXC code was automatically generated by Aixt Project
// Device = Atmel AT91SAM7S256 + Atmel AVR ATmega48
// Board = LEGO Mindstorms NXT intelligent brick
// Backend = nxc


#define     current_tick(...)                  CurrentTick(__VA_ARGS__)
#define     first_tick(...)                    FirstTick(__VA_ARGS__)
#define     reset_sleep_timer(...)             ResetSleepTimer(__VA_ARGS__)
#define     sleep_ms(...)                      Wait(__VA_ARGS__)					//custom
#define     yield(...)                         Yield(__VA_ARGS__)
#define     stop_all_tasks(...)                StopAllTasks(__VA_ARGS__)
#define     stop_program(...)                  Stop(__VA_ARGS__)
#define     exit_to(...)                       ExitTo(__VA_ARGS__)
#define     precedes(...)                      Precedes(__VA_ARGS__)
#define     follows(...)                       Follows(__VA_ARGS__)
#define     acquire(...)                       Acquire(__VA_ARGS__)
#define     release(...)                       Release(__VA_ARGS__)
#define     start_task(...)                    StartTask(__VA_ARGS__)
#define     stop_task(...)                     StopTask(__VA_ARGS__)
#define     branch_test(...)                   BranchTest(__VA_ARGS__)
#define     branch_comp(...)                   BranchComp(__VA_ARGS__)
#define		sleep(TS)							Wait(TS*1000)		//custom
#define     power_down(...)              PowerDown(__VA_ARGS__)
#define     sleep_now(...)               SleepNow(__VA_ARGS__)
#define     reboot_in_firmware_mode(...) RebootInFirmwareMode(__VA_ARGS__)
#define 	a	OUT_A
#define 	b	OUT_B
#define 	c	OUT_C
#define 	ab	OUT_AB
#define 	ac	OUT_AC
#define 	bc	OUT_BC
#define 	abc	OUT_ABC
#define     motor__set_pwn_freq(...)             SetMotorPwnFreq(__VA_ARGS__)
#define     motor__set_regulation_time(...)      SetMotorRegulationTime(__VA_ARGS__)
#define     motor__set_regulation_options(...)   SetMotorRegulationOptions(__VA_ARGS__)
#define     motor__forward_sync_pid(...)         OnFwdSyncPID(__VA_ARGS__)
#define     motor__forward_sync_ex_pid(...)      OnFwdSyncExPID(__VA_ARGS__)
#define     motor__reverse_sync_pid(...)         OnRevSyncPID(__VA_ARGS__)
#define     motor__reverse_sync_ex_pid(...)      OnRevSyncExPID(__VA_ARGS__)
#define     motor__forward_reg_pid(...)          OnFwdRegPID(__VA_ARGS__)
#define     motor__forward_reg_ex_pid(...)       OnFwdRegExPID(__VA_ARGS__)
#define     motor__reverse_reg_pid(...)          OnRevRegPID(__VA_ARGS__)
#define     motor__reverse_reg_ex_pid(...)       OnRevRegExPID(__VA_ARGS__)
#define     motor__off(...)                      Off(__VA_ARGS__)
#define     motor__off_ex(...)                   OffEx(__VA_ARGS__)
#define     motor__coast(...)                    Coast(__VA_ARGS__)
#define     motor__coast_ex(...)                 CoastEx(__VA_ARGS__)
#define     motor__float(...)                    Float(__VA_ARGS__)
#define     motor__forward(...)             	 OnFwd(__VA_ARGS__)
#define     motor__forward_ex(...)               OnFwdEx(__VA_ARGS__)
#define     motor__reverse(...)                  OnRev(__VA_ARGS__)
#define     motor__reverse_ex(...)               OnRevEx(__VA_ARGS__)
#define     motor__forward_reg(...)              OnFwdReg(__VA_ARGS__)
#define     motor__forward_reg_ex(...)           OnFwdRegEx(__VA_ARGS__)
#define     motor__reverse_reg(...)              OnRevReg(__VA_ARGS__)
#define     motor__reverse_reg_ex(...)           OnRevRegEx(__VA_ARGS__)
#define     motor__forward_sync(...)             OnFwdSync(__VA_ARGS__)
#define     motor__forward_sync_ex(...)          OnFwdSyncEx(__VA_ARGS__)
#define     motor__reverse_sync(...)             OnRevSync(__VA_ARGS__)
#define     motor__reverse_sync_ex(...)          OnRevSyncEx(__VA_ARGS__)
#define     motor__rotate(...)                   RotateMotor(__VA_ARGS__)
#define     motor__rotate_pid(...)               RotateMotorPID(__VA_ARGS__)
#define     motor__rotate_ex(...)                RotateMotorEx(__VA_ARGS__)
#define     motor__rotate_ex_pid(...)            RotateMotorExPID(__VA_ARGS__)
#define     motor__reset_tacho_count(...)        ResetTachoCount(__VA_ARGS__)
#define     motor__reset_block_tacho_count(...)  ResetBlockTachoCount(__VA_ARGS__)
#define     motor__reset_rotation_count(...)     ResetRotationCount(__VA_ARGS__)
#define     motor__reset_all_tacho_counts(...)   ResetAllTachoCounts(__VA_ARGS__)
#define     motor__mode(...)                     MotorMode(__VA_ARGS__)
#define     motor__power(...)                    MotorPower(__VA_ARGS__)
#define     motor__actual_speed(...)             MotorActualSpeed(__VA_ARGS__)
#define     motor__tacho_count(...)              MotorTachoCount(__VA_ARGS__)
#define     motor__tacho_limit(...)              MotorTachoLimit(__VA_ARGS__)
#define     motor__run_state(...)                MotorRunState(__VA_ARGS__)
#define     motor__turn_ratio(...)               MotorTurnRatio(__VA_ARGS__)
#define     motor__regulation(...)               MotorRegulation(__VA_ARGS__)
#define     motor__overload(...)                 MotorOverload(__VA_ARGS__)
#define     motor__reg_p_value(...)              MotorRegPValue(__VA_ARGS__)
#define     motor__reg_i_value(...)              MotorRegIValue(__VA_ARGS__)
#define     motor__reg_d_value(...)              MotorRegDValue(__VA_ARGS__)
#define     motor__block_tacho_count(...)        MotorBlockTachoCount(__VA_ARGS__)
#define     motor__rotation_count(...)           MotorRotationCount(__VA_ARGS__)
#define     motor__output_options(...)           MotorOutputOptions(__VA_ARGS__)
#define     motor__max_speed(...)                MotorMaxSpeed(__VA_ARGS__)
#define     motor__max_acceleration(...)         MotorMaxAcceleration(__VA_ARGS__)
#define     motor__pwn_freq(...)                 MotorPwnFreq(__VA_ARGS__)
#define     motor__regulation_time(...)          MotorRegulationTime(__VA_ARGS__)
#define     motor__regulation_options(...)       MotorRegulationOptions(__VA_ARGS__)





task main() {

motor__forward(ab, 50);
sleep(2);
motor__off(ab);
}