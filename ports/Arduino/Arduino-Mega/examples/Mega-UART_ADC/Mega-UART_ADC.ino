// This Arduino code was automatically generated by Aixt Project
// Device = Arduino-Mega
// Board = Arduino Mega
// Backend = arduino

#include <stdio.h>
typedef int8_t i8;
typedef int16_t i16;
typedef int32_t i32;
typedef int64_t i64;
typedef int8_t isize;
typedef int32_t int_literal;
typedef uint8_t u8;
//typedef uint16_t u16;
typedef uint32_t u32;
typedef uint64_t u64;
typedef uint8_t usize;
typedef float f32;
typedef double f64;
typedef double float_literal;
typedef char rune;

#define SERIAL_BEGIN(BAUD_RATE)     Serial.begin(BAUD_RATE)
#define SERIAL_WRITE(CHARACTER)     Serial.write(CHARACTER) 
#define SERIAL_READ()               Serial.read()
#define SERIAL_PRINT(MESSAGE)       Serial.print(MESSAGE)
#define SERIAL_PRINTLN(MESSAGE)     Serial.println(MESSAGE)
#define SERIAL_AVAILABLE()          Serial.available()    

char __temp_str[50];

#define _const_main__led_0 13

#define time__sleep(ts) delay(ts * 1000)

#define time__sleep_ms(tms) delay(tms)

#define time__sleep_us(tus) delayMicroseconds(tus)

#define uart__any()  SERIAL_AVAILABLE()

#define uart__print(message) SERIAL_PRINT(message)

#define uart__println(message) SERIAL_PRINTLN(message)

#define uart__read()  SERIAL_READ()

#define uart__setup(baud_rate) SERIAL_BEGIN(baud_rate)

#define uart__write(character) SERIAL_WRITE(character)

#define _const_adc__ch0 54
#define _const_adc__ch1 55
#define _const_adc__ch2 56
#define _const_adc__ch3 57
#define _const_adc__ch4 58
#define _const_adc__ch5 59
#define _const_adc__ch6 60
#define _const_adc__ch7 61
#define _const_adc__ch8 62
#define _const_adc__ch9 63
#define _const_adc__ch10 64
#define _const_adc__ch11 65
#define _const_adc__ch12 66
#define _const_adc__ch13 67
#define _const_adc__ch14 68
#define _const_adc__ch15 69

#define adc__read(name)  analogRead(name)

void setup() {
	uart__setup(9600); 
	while( true ) {
		u16 analog = (u16)(adc__read(_const_adc__ch5)); 
		sprintf(__temp_str, "ADC channel 0: %u", (unsigned int)analog);
		uart__println(__temp_str); 
		time__sleep_ms(1000); 
	} 
}

void loop(){
}
