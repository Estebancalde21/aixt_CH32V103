# NXC Input

#  Constants for use with the color calibration functions. 
"cal_point_0" 	= "INPUT_CAL_POINT_0"    
"cal_point_1" 	= "INPUT_CAL_POINT_1"    
"cal_point_2" 	= "INPUT_CAL_POINT_2"    
"no_of_points"	= "INPUT_NO_OF_POINTS"   

#  Constants for use with the color calibration state function. 
"sensorcal" 	= "INPUT_SENSORCAL" 
"sensoroff" 	= "INPUT_SENSOROFF" 
"runningcal"	= "INPUT_RUNNINGCAL"
"startcal"  	= "INPUT_STARTCAL"  
"resetcal"  	= "INPUT_RESETCAL"  

#  Constants for use with color sensor value arrays to index RGB and blank return values. 
"red"         	= "INPUT_RED"         
"green"       	= "INPUT_GREEN"       
"blue"        	= "INPUT_BLUE"        
"blank"       	= "INPUT_BLANK"       
"no_of_colors"	= "INPUT_NO_OF_COLORS"

#  Constants for use with the ColorValue returned by the color sensor in full color mode. 
"blackcolor" 		= "INPUT_BLACKCOLOR" 
"bluecolor"  		= "INPUT_BLUECOLOR"  
"greencolor" 		= "INPUT_GREENCOLOR" 
"yellowcolor"		= "INPUT_YELLOWCOLOR"
"redcolor"   		= "INPUT_REDCOLOR"   
"whitecolor" 		= "INPUT_WHITECOLOR" 

#  Constants for use with the Input module's Pin function. 
"pincmd_dir"   	= "INPUT_PINCMD_DIR"   
"pincmd_set"   	= "INPUT_PINCMD_SET"   
"pincmd_clear" 	= "INPUT_PINCMD_CLEAR" 
"pincmd_read"  	= "INPUT_PINCMD_READ"  
"pincmd_mask"  	= "INPUT_PINCMD_MASK"  
"pincmd_wait"  	= "INPUT_PINCMD_WAIT"  
"pindir_output"	= "INPUT_PINDIR_OUTPUT"
"pindir_input" 	= "INPUT_PINDIR_INPUT"

#  Constants for use with set_input                                                      
"type_field"           	= "TypeField"           
"input_mode_field"      	= "InputModeField"      
"raw_value_field"       	= "RawValueField"       
"normalized_value_field"	= "NormalizedValueField"
"scaled_value_field"    	= "ScaledValueField"    
"invalid_data_field"    	= "InvalidDataField"    

#  Constant offsets into the Input module IOMAP structure. 
"offset_custom_zero_offset"     	= "InputOffsetCustomZeroOffset"                                                      
"offset_ad_raw"                	= "InputOffsetADRaw"                                                      
"offset_sensor_raw"            	= "InputOffsetSensorRaw"                                                      
"offset_sensor_value"          	= "InputOffsetSensorValue"                                                      
"offset_sensor_type"           	= "InputOffsetSensorType"                                                      
"offset_sensor_mode"           	= "InputOffsetSensorMode"                                                      
"offset_sensor_boolean"        	= "InputOffsetSensorBoolean"                                                      
"offset_digi_pins_dir"          	= "InputOffsetDigiPinsDir"                                                      
"offset_digi_pins_in"           	= "InputOffsetDigiPinsIn"                                                      
"offset_digi_pins_out"          	= "InputOffsetDigiPinsOut"                                                      
"offset_custom_pct_full_scale"   	= "InputOffsetCustomPctFullScale"                                                      
"offset_custom_active_status"   	= "InputOffsetCustomActiveStatus"                                                      
"offset_invalid_data"          	= "InputOffsetInvalidData"                                                      
"offset_color_calibration"     	= "InputOffsetColorCalibration"                                                      
"offset_color_cal_limits"       	= "InputOffsetColorCalLimits"                                                      
"offset_color_ad_raw"           	= "InputOffsetColorADRaw"                                                      
"offset_color_sensor_raw"       	= "InputOffsetColorSensorRaw"                                                      
"offset_color_sensor_value"     	= "InputOffsetColorSensorValue"                                                      
"offset_color_boolean"         	= "InputOffsetColorBoolean"                                                      
"offset_color_calibration_state"	= "InputOffsetColorCalibrationState"      

#  Input port constants are used when calling NXC sensor control API functions. 
"s1"	= "S1"
"s2"	= "S2"
"s3"	= "S3"
"s4"	= "S4"

#  Constants for use when directly controlling or reading a port's digital pin state. 
"digi0"	= "INPUT_DIGI0"
"digi1"	= "INPUT_DIGI1"

#  Input port constants are used when calling sensor control API functions.
#  These constants are intended for use in NBC. 
"in_1"	= "IN_1"
"in_2"	= "IN_2"
"in_3"	= "IN_3"
"in_4"	= "IN_4"

#  Use the combined sensor type and mode constants to configure both the sensor mode and type in a single function call. 
"touch"         = "_SENSOR_CFG"                                                         
"light"         = "_SENSOR_CFG"                                                         
"rotation"      = "_SENSOR_CFG"                                                         
"celsius"       = "_SENSOR_CFG"                                                         
"fahrenheit"    = "_SENSOR_CFG"                                                         
"pulse"         = "_SENSOR_CFG"                                                         
"edge"          = "_SENSOR_CFG"                                                         
"nxtlight"      = "_SENSOR_CFG"                                                         
"sound"         = "_SENSOR_CFG"                                                         
"lowspeed_9v"   = "_SENSOR_CFG"                                                         
"lowspeed"      = "_SENSOR_CFG"                                                         
"colorfull"     = "_SENSOR_CFG"                                                         
"colorred"      = "_SENSOR_CFG"                                                         
"colorgreen"    = "_SENSOR_CFG"                                                         
"colorblue"     = "_SENSOR_CFG"                                                         
"colornone"     = "_SENSOR_CFG"                                                         

#  Use sensor mode constants to configure an input port for the desired sensor mode.
#  The constants are intended for use in NBC. 
"mode_raw"          	= "IN_MODE_RAW"          
"mode_boolean"      	= "IN_MODE_BOOLEAN"      
"mode_transitioncnt"	= "IN_MODE_TRANSITIONCNT"
"mode_periodcounter"	= "IN_MODE_PERIODCOUNTER"
"mode_pctfullscale" 	= "IN_MODE_PCTFULLSCALE" 
"mode_celsius"      	= "IN_MODE_CELSIUS"      
"mode_fahrenheit"   	= "IN_MODE_FAHRENHEIT"   
"mode_anglestep"    	= "IN_MODE_ANGLESTEP"    
"mode_slopemask"    	= "IN_MODE_SLOPEMASK"    
"mode_modemask"     	= "IN_MODE_MODEMASK"     

#  Use sensor type constants to configure an input port for a specific type of sensor.
#  These constants are intended for use in NBC. 
"type_no_sensor"     	= "IN_TYPE_NO_SENSOR"     
"type_switch"        	= "IN_TYPE_SWITCH"        
"type_temperature"   	= "IN_TYPE_TEMPERATURE"   
"type_reflection"    	= "IN_TYPE_REFLECTION"    
"type_angle"         	= "IN_TYPE_ANGLE"         
"type_light_active"  	= "IN_TYPE_LIGHT_ACTIVE"  
"type_light_inactive"	= "IN_TYPE_LIGHT_INACTIVE"
"type_sound_db"      	= "IN_TYPE_SOUND_DB"      
"type_sound_dba"     	= "IN_TYPE_SOUND_DBA"     
"type_custom"        	= "IN_TYPE_CUSTOM"        
"type_lowspeed"      	= "IN_TYPE_LOWSPEED"      
"type_lowspeed_9v"   	= "IN_TYPE_LOWSPEED_9V"   
"type_hispeed"       	= "IN_TYPE_HISPEED"       
"type_colorfull"     	= "IN_TYPE_COLORFULL"     
"type_colorred"      	= "IN_TYPE_COLORRED"      
"type_colorgreen"    	= "IN_TYPE_COLORGREEN"    
"type_colorblue"     	= "IN_TYPE_COLORBLUE"     
"type_colornone"     	= "IN_TYPE_COLORNONE"     
"type_colorexit"     	= "IN_TYPE_COLOREXIT"    

#  Use sensor mode constants to configure an input port for the desired sensor mode.  
"mode_raw"          = "IN_MODE_RAW"
"mode_bool"         = "IN_MODE_BOOLEAN"
"mode_edge"         = "IN_MODE_TRANSITIONCNT"
"mode_pulse"        = "IN_MODE_PERIODCOUNTER"
"mode_percent"      = "IN_MODE_PCTFULLSCALE"
"mode_celsius"      = "IN_MODE_CELSIUS"
"mode_fahrenheit"   = "IN_MODE_FAHRENHEIT"
"mode_rotation"     = "IN_MODE_ANGLESTEP"

#  Use sensor type constants to configure an input port for a specific type of sensor. 
"type_none"          	= "IN_TYPE_NO_SENSOR"
"type_touch"         	= "IN_TYPE_SWITCH"
"type_temperature"   	= "IN_TYPE_TEMPERATURE"
"type_light"         	= "IN_TYPE_REFLECTION"
"type_rotation"      	= "IN_TYPE_ANGLE"
"type_light_active"  	= "IN_TYPE_LIGHT_ACTIVE"
"type_light_inactive"	= "IN_TYPE_LIGHT_INACTIVE"
"type_sound_db"      	= "IN_TYPE_SOUND_DB"
"type_sound_dba"     	= "IN_TYPE_SOUND_DBA"
"type_custom"        	= "IN_TYPE_CUSTOM"
"type_lowspeed"      	= "IN_TYPE_LOWSPEED"
"type_lowspeed_9v"   	= "IN_TYPE_LOWSPEED_9V"
"type_highspeed"     	= "IN_TYPE_HISPEED"
"type_colorfull"     	= "IN_TYPE_COLORFULL"
"type_colorred"      	= "IN_TYPE_COLORRED"
"type_colorgreen"    	= "IN_TYPE_COLORGREEN"
"type_colorblue"     	= "IN_TYPE_COLORBLUE"
"type_colornone"     	= "IN_TYPE_COLORNONE"

#  
"custominactive"	= "INPUT_CUSTOMINACTIVE"
"custom9v"      	= "INPUT_CUSTOM9V"      
"customactive"  	= "INPUT_CUSTOMACTIVE"  
"invalid_data"  	= "INPUT_INVALID_DATA"  

#  Functions for accessing and modifying input module features.
"sensor__set_type("                		    = "SetSensorType("                                                          
"sensor__set_mode("          				= "SetSensorMode("                                                          
"sensor__clear("            				= "ClearSensor("                                                          
"sensor__reset("            				= "ResetSensor("                                                          
"sensor__set("              				= "SetSensor("                                                          
"sensor__set_touch("         				= "SetSensorTouch("                                                          
"sensor__set_light("         				= "SetSensorLight("                                                          
"sensor__set_sound("         				= "SetSensorSound("                                                          
"sensor__set_lowspeed("      				= "SetSensorLowspeed("                                                          
"sensor__set_ultrasonic("    				= "SetSensorUltrasonic("                                                          
"sensor__set_e_meter("        				= "SetSensorEMeter("                                                          
"sensor__set_temperature("   				= "SetSensorTemperature("                                                          
"sensor__set_color_full("     				= "SetSensorColorFull("                                                          
"sensor__set_color_red("      				= "SetSensorColorRed("                                                          
"sensor__set_color_green("    				= "SetSensorColorGreen("                                                          
"sensor__set_color_blue("     				= "SetSensorColorBlue("                                                          
"sensor__set_color_none("     				= "SetSensorColorNone("                                                          
"get_input("                   			    = "GetInput("                                                          
"set_input("                   			    = "SetInput("                                                          
"sensorx("                      			= "Sensor("                                                          
"sensor__boolean("            				= "SensorBoolean("                                                          
"sensor__digi_pins_direction("        		= "SensorDigiPinsDirection("                                                          
"sensor__digi_pins_output_level("      	    = "SensorDigiPinsOutputLevel("                                                          
"sensor__digi_pins_status("           		= "SensorDigiPinsStatus("                                                          
"sensor__invalid("                  		= "SensorInvalid("                                                          
"sensor__mode("                     		= "SensorMode("                                                          
"sensor__normalized("               		= "SensorNormalized("                                                          
"sensor__raw("                      		= "SensorRaw("                                                          
"sensor__scaled("                   		= "SensorScaled("                                                          
"sensor__type("                     		= "SensorType("                                                          
"sensor__value("                    		= "SensorValue("                                                          
"sensor__value_bool("                		= "SensorValueBool("                                                          
"sensor__value_raw("                 		= "SensorValueRaw("                                                          
"sensor__custom_active_status("       		= "CustomSensorActiveStatus("                                                          
"sensor__custom_percent_full_scale("   	    = "CustomSensorPercentFullScale("                                                          
"sensor__custom_zero_offset("         		= "CustomSensorZeroOffset("                                                          
"sensor__set_custom_active_status("    	    = "SetCustomSensorActiveStatus("                                                          
"sensor__set_custom_percent_full_scale("	= "SetCustomSensorPercentFullScale("                                                          
"sensor__set_custom_zero_offset("      	    = "SetCustomSensorZeroOffset("                                                          
"sensor__set_boolean("               		= "SetSensorBoolean("                                                          
"sensor__set_digi_pins_direction("     	    = "SetSensorDigiPinsDirection("                                                          
"sensor__set_digi_pins_output_level("   	= "SetSensorDigiPinsOutputLevel("                                                          
"sensor__set_digi_pins_status("         	= "SetSensorDigiPinsStatus("                                                          
"sensor__sys_color_read("             		= "SysColorSensorRead("                                                          
"sensor__read_color_ex("              		= "ReadSensorColorEx("                                                          
"sensor__read_color_raw("             		= "ReadSensorColorRaw("                                                          
"color_ad_raw("                    		    = "ColorADRaw("                                                          
"color_boolean("                   		    = "ColorBoolean("                                                          
"color_calibration("               		    = "ColorCalibration("                                                          
"color_calibration_state("         		    = "ColorCalibrationState("                                                          
"color_cal_limits("                		    = "ColorCalLimits("                                                          
"color_raw("                 				= "ColorSensorRaw("                                                          
"color_value("               				= "ColorSensorValue("                                                          
"sys_input_pin_function("          		    = "SysInputPinFunction("                                                          

#HiTechinc Angle Sensor Constants

"htangle_mode_normal"      =            "HTANGLE_MODE_NORMAL"             
"htangle_mode_calibrate"   =            "HTANGLE_MODE_CALIBRATE"             
"htangle_mode_reset"       =            "HTANGLE_MODE_RESET"             
"htangle_reg_mode"         =            "HTANGLE_REG_MODE"             
"htangle_reg_dcdir"        =            "HTANGLE_REG_DCDIR"             
"htangle_reg_dc01"         =            "HTANGLE_REG_DC01"             
"htangle_reg_dc02"         =            "HTANGLE_REG_DC02"             
"htangle_reg_dc03"         =            "HTANGLE_REG_DC03"             
"htangle_reg_dc04"         =            "HTANGLE_REG_DC04"             
"htangle_reg_dc05"         =            "HTANGLE_REG_DC05"             
"htangle_reg_dcavg"        =            "HTANGLE_REG_DCAVG"             
"htangle_reg_acdir"        =            "HTANGLE_REG_ACDIR"             

#HiTechinc Barometic Sensor constants

 "htbar_reg_command"       =             "HTBAR_REG_COMMAND"                                                                                    
 "htbar_reg_temperature"   =             "HTBAR_REG_TEMPERATURE"                                   
 "Whtbar_reg_pressure"     =             "HTBAR_REG_PRESSURE"                                
 "htbar_reg_calibration"   =             "HTBAR_REG_CALIBRATION"                                   

#HiTechinc Color2 Constants

"ht_cmd_color2_active"     =           "HT_CMD_COLOR2_ACTIVE"  
"ht_cmd_color2_passive"    =           "HT_CMD_COLOR2_PASSIVE"  
"ht_cmd_color2_raw"        =           "HT_CMD_COLOR2_RAW"  
"ht_cmd_color2_50hz"       =           "HT_CMD_COLOR2_50HZ"  
"ht_cmd_color2_60hz"       =           "HT_CMD_COLOR2_60HZ"  
"ht_cmd_color2_blcal"      =           "HT_CMD_COLOR2_BLCAL"  
"ht_cmd_color2_wbcal"      =           "HT_CMD_COLOR2_WBCAL"  
"ht_cmd_color2_far"        =           "HT_CMD_COLOR2_FAR"  
"ht_cmd_color2_led_hi"     =           "HT_CMD_COLOR2_LED_HI"  
"ht_cmd_color2_led_low"    =           "HT_CMD_COLOR2_LED_LOW"  
"ht_cmd_color2_near"       =           "HT_CMD_COLOR2_NEAR"

#HiTechinc IRReceiver constants

"ht_cha1_A"                =           "HT_CHA1_A" 
"ht_cha1_B"                =           "HT_CHA1_B"
"ht_cha2_A"                =           "HT_CHA2_A"
"ht_cha2_B"                =           "HT_CHA2_B"
"ht_cha3_A"                =           "HT_CHA3_A"
"ht_cha3_B"                =           "HT_CHA3_B" 
"ht_cha4_A"                =           "HT_CHA4_A"
"ht_cha4_B"                =           "HT_CHA4_B"

#HiTechinc IRSeeeker2 constants

"htir2_mode_1200"          =           "HTIR2_MODE_1200" 
"htir2_mode_600"           =           "HTIR2_MODE_600"
"htir2_reg_mode"           =           "HTIR2_REG_MODE"
"htir2_reg_dcdir"          =           "HTIR2_REG_DCDIR"  
"htir2_reg_dc01"           =           "HTIR2_REG_DC01"
"htir2_reg_dc02"           =           "HTIR2_REG_DC02" 
"htir2_reg_dc03"           =           "HTIR2_REG_DC03"
"htir2_reg_dc04"           =           "HTIR2_REG_DC04"
"htir2_reg_dc05"           =           "HTIR2_REG_DC05" 
"htir2_reg_dcavr"          =           "HTIR2_REG_DCAVG" 
"htir2_reg_acdir"          =           "HTIR2_REG_ACDIR" 
"htir2_reg_ac01"           =           "HTIR2_REG_AC01" 
"htir2_reg_ac02"           =           "HTIR2_REG_AC02"
"htir2_reg_ac03"           =           "HTIR2_REG_AC03"
"htir2_reg_ac04"           =           "HTIR2_REG_AC04" 
"htir2_reg_ac04"           =           "HTIR2_REG_AC05" 

#  HiTechinc PIR sensor Constants

"htpir_reg_deadband"       =           "HTPIR_REG_DEADBAND" 
"htpir_reg_reading"        =           "HTPIR_REG_READING" 

#HiTechinc Prototype board constants

"htproto_reg_a0"           =           "HTPROTO_REG_A0"  
"htproto_reg_a1"           =           "HTPROTO_REG_A1" 
"htproto_reg_a2"           =           "HTPROTO_REG_A2"
"htproto_reg_a3"           =           "HTPROTO_REG_A3" 
"htproto_reg_a4"           =           "HTPROTO_REG_A4"
"htproto_reg_din"          =           "HTPROTO_REG_DIN" 
"htproto_reg_dout"         =           "HTPROTO_REG_DOUT" 
"htproto_reg_dctrl"        =           "HTPROTO_REG_DCTRL" 
"htproto_reg_strate"       =           "HTPROTO_REG_SRATE"

#HiTechinc SuperPro analog input

"htspro_A0"                =           "HTSPRO_A0"          
"htspro_A1"                =           "HTSPRO_A1"
"htspro_A2"                =           "HTSPRO_A2"
"htspro_A3"                =           "HTSPRO_A3"

#HiTechinc SuperPro analog output

"htspro_dac0"              =           "HTSPRO_DAC0"
"htspro_dac1"              =           "HTSPRO_DAC1" 

#SuperPro LED control constants

"led_blue"                 =           "LED_BLUE"
"led_red"                  =           "LED_RED"
"led_none"                 =           "LED_NONE"

#SuperPro Strobe control constants

"strobe_s0"                =           "STROBE_S0"          
"strobe_s1"                =           "STROBE_S1" 
"strobe_s2"                =           "STROBE_S2"
"strobe_s3"                =           "STROBE_S3"
"strobe_read"              =           "STROBE_READ"
"strobe_write"             =           "STROBE_WRITE"

#SuperPro analog output mode constants

"dac_mode_dcout"           =                 "DAC_MODE_DCOUT"
"dac_mode_sinewave"        =                 "DAC_MODE_SINEWAVE"
"dac_mode_squarewave"      =                 "DAC_MODE_SQUAREWAVE"
"dac_mode_sawposwave"      =                 "DAC_MODE_SAWPOSWAVE"
"dac_mode_sawnegwave"      =                 "DAC_MODE_SAWNEGWAVE"
"dac_mode_trianglewave"    =                 "DAC_MODE_TRIANGLEWAVE"
"dac_mode_pwmvoltage"      =                 "DAC_MODE_PWMVOLTAGE"
"dac_mode_restart_mask"    =                 "DAC_MODE_RESTART_MASK"

#SuperPro digital pin constants

"digi_pin0"                =                 "DIGI_PIN0"
"digi_pin1"                =                 "DIGI_PIN1"
"digi_pin2"                =                 "DIGI_PIN2"
"digi_pin3"                =                 "DIGI_PIN3"
"digi_pin4"                =                 "DIGI_PIN4"
"digi_pin5"                =                 "DIGI_PIN5"
"digi_pin6"                =                 "DIGI_PIN6"
"digi_pin7"                =                 "DIGI_PIN7"

#  Functions HiTechnic API Functions

"sensor__set_ht_gyro("                         =                  "SetSensorHTGyro("
"sensor__set_ht_magnet("                       =                  "SetSensorHTMagnet("
"sensor__set_ht_eo_pd("                        =                  "SetSensorHTEOPD("
"sensor__set_ht_force("                        =                  "SetSensorHTForce("
"sensor__ht_gyro("                             =                  "SensorHTGyro("
"sensor__ht_magnet("                           =                  "SensorHTMagnet("
"sensor__ht_eo_pd("                            =                  "SensorHTEOPD("
"sensor__ht_force("                            =                  "SensorHTForce("
"sensor__ht_color_num("                        =                  "SensorHTColorNum("
"sensor__ht_compass("                          =                  "SensorHTCompass("
"sensor__ht_ir_seeker_dir("                    =                  "SensorHTIRSeekerDir("
"sensor__ht_ir_seeker_2_addr("                 =                  "SensorHTIRSeeker2Addr("
"sensor__ht_ir_seeker_2_dcd_ir("               =                  "SensorHTIRSeeker2ACDir("
"sensor__set_ht_color_2_mode("                 =                  "SetHTColor2Mode("
"sensor__set_ht_ir_seeker_2_mode("             =                  "SetHTIRSeeker2Mode("
"sensor__read_ht_accel("                       =                  "ReadSensorHTAceel("
"sensor__read_ht_color("                       =                  "ReadSensorHTColor("
"sensor__read_ht_ir_seeker("                   =                  "ReadSensorHTIRSeeker("
"sensor__read_ht_normalized_color("            =                  "ReadSensorHTNormalizedColor("
"sensor__read_ht_raw_color("                   =                  "ReadSensorHTRawColor("
"sensor__read_ht_color_2_active("              =                  "ReadSensorHTColor2Active("
"sensor__read_ht_normalized_color_2_active("   =                  "ReadSensorHTNormalizedColor2Active("
"sensor__read_ht_raw_color_2("                 =                  "ReadSensorHTRawColor2("
"sensor__read_ht_ir_receiver("                 =                  "ReadSensorHTIRReceiver("
"sensor__read_ht_ir_receiver_ex("              =                  "ReadSensorHTIRReceiverEX("        
"sensor__read_ht_ir_seeker_2_ac("              =                  "ReadSensorHTIRSeeker2AC("
"sensor__read_ht_ir_seeker_2_dc("              =                  "ReadSensorHTIRSeeker2DC("
"sensor__reset_ht_angle("                      =                  "ResetSensorHTAngle("
"sensor__read_ht_angle("                       =                  "ReadSensorHTAngle("
"reset__ht_barometic_calibration("             =                  "ResetHTBarometicCalibration"
"set__ht_barometic_calibration("               =                  "SetHTBarometicCalibration("
"sensor__read_ht_barometric("                  =                  "ReadSensorHTBarometric("
"sensor__ht_proto_analog("                     =                  "SensorHTProtoAnalog("   
"sensor__read_ht_proto_all_analog("            =                  "ReadSensorHTProtoAllAnalog("
"sensor__set_ht_proto_digital_control("        =                  "SetSensorHTProtoDigitalControl("
"sensor__ht_proto_digital_control("            =                  "SensorHTProtoDigitalControl("
"sensor__set_ht_proto_digital("                =                  "SetSensorHTEOProtoDigital("
"sensor__ht_proto_digital("                    =                  "SensorHTProtoDigital(" 
"sensor__ht_super_pro_analog("                 =                  "SensorHTSuperProAnalog("
"sensor__read_ht_super_pro_all_analog("        =                  "ReadSensorHTSuperProAllAnalog("
"sensor__set_ht_super_pro_digital_control("    =                  "SetSensorHTSuperProDigitalControl("
"sensor__ht_super_pro_digital_control("        =                  "SensorHTSuperProDIgitalControl("
"sensor__set_ht_super_pro_digital("            =                  "SetSensorHTSuperProDigital("
"sensor__ht_super_pro_digital("                =                  "SensorHTSuperProDigital("
"sensor__set_ht_super_pro_led("                =                  "SetSensorHTSuperProLed("
"sensor__ht_super_pro_led("                    =                  "SensorHTSuperProLed("
"sensor__set_ht_super_pro_strobe("             =                  "SetSensorHTSuperProStrobe("
"sensor__ht_super_pro_strobe("                 =                  "SensorHTSuperProStrobe("
"sensor__set_ht_super_pro_program_control("    =                  "SetSensorHTSuperProProgramControl("
"sensor__ht_super_pro_program_control("        =                  "SensorHTSuperProProgramControl("
"sensor__set_ht_super_pro_analog_out("         =                  "SetSensorHTSuperProAnalogOut("
"sensor__read_ht_super_pro_analog_out("        =                  "ReadSensorHTSuperProAnalogOut("
"sensor__set_ht_ir_deadband("                  =                  "SetSensorHTPIRDeadband("
"sensor__ht_pir("                              =                  "SensorHTPIR("
"sensor__read_ht_touch_multiplexer("           =                  "ReadSensorHTTouchMultiplexer("
"ht__ir_train("                                =                  "HTIRTrain("
"ht__pf_combo_direct("                         =                  "HTPFComboDirect("
"ht__pf_combo_p_w_m("                          =                  "HTPFComboPWM("
"ht__pf_raw_output("                           =                  "HTPFRawnOutput("
"ht__pd_repeat("                               =                  "HTPFRepeat("
"ht__pf_single_output_c_s_t("                  =                  "HTPFSingleOutputCST("
"ht__pf_single_output_p_w_m("                  =                  "HTPFSingleOutputPWM("    
"ht__pf_single_pin("                           =                  "HTPFSinglePin("
"ht__pf_train("                                =                  "HTPFTrain("
"ht__rcx_setl_r_link_port("                    =                  "HTRCXSetlRLinkPort("
"ht__rcx_battery_level"                         =                  "HTRCXBatteryLevel"
"ht__rcx_poll("                                =                  "HTRCXPoll("
"ht__rcx_poll_memory("                         =                  "HTRCXPollMemory("
"ht__rcx_add_to_datalog("                      =                  "HTRCXAddToDatalog("
"ht__rcx_clear_all_events"                    =                  "HTRCXClearAllEvents"
"ht__rcx_clear_counter("                       =                  "HTRCXClearCounter("
"ht__rcx_clear_msg"                           =                  "HTRCXClearMsg"  
"ht__rcx_clear_sensor("                        =                  "HTRCXClearSensor("
"ht__rcx_clear_sound"                         =                  "HTRCXClearSound"            
"ht__rcx_clear_timer("                         =                  "HTRCXClearTimer("
"ht__rcx_create_datalog("                      =                  "HTRCXCreateDatalog("
"ht__rcx_dec_counter("                         =                  "HTRCXDecCounter("
"ht__rcx_delete_sub("                          =                  "HTRCXDeleteSub("
"ht__rcx_delete_subs"                         =                  "HTRCXDeleteSubs"
"ht__rcx_delete_task("                         =                  "HTRCXDeleteTask("
"ht__rcx_delete_tasks"                        =                  "HTRCXDeleteTasks"
"ht__rcx_disable_output("                      =                  "HTRCXDisableOutput("
"ht__rcx_enable_output("                       =                  "HTRCXEnableOutput("
"ht__rcx_event("                               =                  "HTRCXEvent("
"ht__rcx_float("                               =                  "HTRCXFloat("
"ht__rcx_fwd("                                 =                  "HTRCXFwd("
"ht__rcx_inc_counter("                         =                  "HTRCXIncCounter("
"ht__rcx_invert_output("                       =                  "HTRCXInvertOutput("
"ht__rcx_mute_sound"                          =                  "HTRCXMuteSound"
"ht__rcx_obvert_output("                       =                  "HTRCXObvertOutput("
"ht__rcx_off("                                 =                  "HTRCXOff("
"ht__rcx_on("                                  =                  "HTRCXOn("
"ht__rcx_on_for("                              =                  "HTRCXOnFor("
"ht__rcx_on_fwd("                              =                  "HTRCXOnFwd("
"ht__rcx_on_rev("                              =                  "HTRCXOnRev("
"ht__rcx_pb_turn_off"                         =                  "HTRCXPBTurnOff"
"ht__rcx_ping"                                =                  "HTRCXPing"
"ht__rcx_play_sound("                          =                  "HTRCXPlaySound("
"ht__rcx_play_tone("                           =                  "HTRCXPlayTone("
"ht__rcx_play_tone_var("                       =                  "HTRCXPlayToneVar("
"ht__rcx_remote("                              =                  "HTRCXRemote("
"ht__rcx_rev("                                 =                  "HTRCXRev("
"ht__rcx_select_display("                      =                  "HTRCXSelectDisplay("
"ht__rcx_select_program("                      =                  "HTRCXSelectProgram("
"ht__rcx_send_serial("                         =                  "HTRCXSendSerial("
"ht__rcx_set_direction("                       =                  "HTRCXSetDirection("
"ht__rcx_set_event("                           =                  "HTRCXSetEvent("
"ht__rcx_set_global_direction("                =                  "HTRCXSetGlobalDirection("
"ht__rcx_set_global_output("                   =                  "HTRCXSetGlobalOutput("
"ht__rcx_set_max_power("                       =                  "HTRCXSetMaxPower("
"ht__rcx_set_message("                         =                  "HTRCXSetMessage("
"ht__rcx_set_output("                          =                  "HTRCXSetOutput("
"ht__rcx_set_power("                           =                  "HTRCXSetPower("
"ht__rcx_set_priority("                        =                  "HTRCXSetPriority("
"ht__rcx_set_sensor_mode("                     =                  "HTRCXSetSensorMode("
"ht__rcx_set_sensor_type("                     =                  "HTRCXSetSensorType("
"ht__rcx_set_sleep_time("                      =                  "HTRCXSetSleepTime("
"ht__rcx_set_tx_power("                        =                  "HTRCXSetTxPower("
"ht__rcx_set_watch"                           =                  "HTRCXSetWatch"
"ht__rcx_start_task("                          =                  "HTRCXStartTask("
"ht__rcx_stop_all_taks("                       =                  "HTRCXStopAllTasks("
"ht__rcx_stop_task"                           =                  "HTRCXStopTask"
"ht__rcx_toggle("                              =                  "HTRCXToggle("
"ht__rcx_unmute_sound"                        =                  "HTRCXUnmuteSound"
"ht__scout_calibrate_sensor"                  =                  "HTScoutCalibrateSensor"
"ht__scout_mute_sound"                        =                  "HTScoutMuteSound"
"ht__scout_select_sounds("                     =                  "HTScoutSelectSounds("                         
"ht__scout_send_V_L_L("                        =                  "HTScoutSendVLL("
"ht__scout_set_event_feed_back("               =                  "HTScoutSetEventFeedback("
"ht__scout_set_light("                         =                  "HTScoutSetLight("
"ht__scout_set_scout_mode("                    =                  "HTScoutSetScoutMode("
"ht__scout_set_sensor_click_time("             =                  "HTScoutSetSensorClickTime("
"ht__scout_set_sensor_hysteresis("             =                  "HTScoutSetSensorHysteresis("
"ht__scout_set_sensor_lower_limit("            =                  "HTScourSetSensorLowerLimit("
"ht__scout_set_sensor_upper_limit("            =                  "HTScourSetSensorUpperLimit("
"ht__scout_unmute_sound"                      =                  "HTScourUnmuteSound"
|


